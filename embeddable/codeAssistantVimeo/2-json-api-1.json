[
    { "timestamp": 0, "fileName": "docker-compose.yml", "content": "version: \"3\"\nservices:\n  back: \n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\" \n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\" \n      MYSQL_USER: \"user\" \n      MYSQL_PASSWORD: \"password\" \n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3309:3306\" \n    networks:\n      - pelda_net\n    expose:\n      - \"3309\"\n  phpmyadmin: \n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80 \n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n# phpmyadmin login: (host: pelda_host, felhasznalonev: user, jelszo: password) \nnetworks:\n  pelda_net:\n    driver: bridge\n\n    # docker stop $(docker ps -a -q)\n    # docker rm -f $(docker ps -a -q)\n    # docker-compose up --build\n" },
    { "timestamp": 28, "fileName": "schema.sql", "content": "-- phpMyAdmin SQL Dump\n-- version 5.1.0\n-- https://www.phpmyadmin.net/\n--\n-- Gép: pelda_host:3306\n-- Létrehozás ideje: 2021. Máj 26. 16:46\n-- Kiszolgáló verziója: 8.0.25\n-- PHP verzió: 7.4.16\n\nSET SQL_MODE = \"NO_AUTO_VALUE_ON_ZERO\";\nSTART TRANSACTION;\nSET time_zone = \"+00:00\";\n\n\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;\n/*!40101 SET NAMES utf8mb4 */;\n\n--\n-- Adatbázis: `test_db`\n--\n\n-- --------------------------------------------------------\n\n--\n-- Tábla szerkezet ehhez a táblához `instruments`\n--\n\nCREATE TABLE `instruments` (\n  `id` int NOT NULL,\n  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci,\n  `brand` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,\n  `price` int DEFAULT NULL,\n  `quantity` int DEFAULT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;\n\n--\n-- A tábla adatainak kiíratása `instruments`\n--\n\nINSERT INTO `instruments` (`id`, `name`, `description`, `brand`, `price`, `quantity`) VALUES\n(1, 'American Original 50s Telecaster', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam scelerisque, justo id dapibus convallis, est sapien consequat nibh, ut tristique tellus magna a mi. Vestibulum interdum orci non lectus tincidunt dictum. Etiam facilisis orci a elit facilisis, ac pretium velit dictum. Pellentesque eu auctor diam. Curabitur suscipit leo eu sollicitudin venenatis.', 'Fender', 649900, 1),\n(2, 'Troublemaker Telecaster', 'Quisque vel tellus nec leo vestibulum molestie. Donec fringilla urna non erat dictum posuere. Nullam luctus convallis facilisis. Praesent elementum varius metus sit amet elementum. Praesent vitae leo non sapien rutrum elementum. Aenean eget hendrerit turpis. Morbi in sagittis quam, varius finibus nisi. Sed eu mi malesuada, semper felis eu, rutrum tellus. Quisque rutrum id dui vitae luctus. Praesent vehicula cursus mollis.', 'Fender', 469990, 3),\n(3, 'PM-2 Standard Parlor, Natural', 'Nulla mollis arcu magna. Mauris ac commodo turpis, eget placerat ligula. Suspendisse potenti. Nullam congue nisi at quam interdum, eget consectetur sem ultricies. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Vestibulum scelerisque risus mi, eget lacinia purus sagittis in. Suspendisse blandit eu est a placerat.', 'Fender', 217500, 8),\n(4, 'Steve Vai Signature JEM77 - Blue Floral Pattern', 'Nunc lorem lacus, commodo a eros a, venenatis eleifend nunc. Pellentesque interdum, odio tincidunt aliquam aliquam, velit nulla tempus tortor, non tempus mi turpis ut risus. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Vivamus vitae aliquet arcu. Sed pretium, ipsum sed sagittis tempus, magna ligula sollicitudin massa, mollis suscipit arcu arcu sed est. Nam eleifend dui ante, sit amet ultrices dui laoreet ac.', 'Ibanez', 474775, 2),\n(5, 'J Custom RG8560 Electric Guitar - Sapphire Blue', 'Vivamus eu purus luctus, porta orci et, gravida nulla. Duis elementum lacus eu arcu ullamcorper tincidunt. Integer quis sem et ante mollis finibus vitae et nunc. Sed porttitor interdum ipsum, sit amet varius dui convallis non. Mauris lobortis erat ac urna dictum mollis. Nam luctus urna quis erat venenatis, imperdiet dapibus est sodales. Fusce ornare consequat felis, eu accumsan erat vulputate quis. Donec suscipit consequat mi quis posuere. Donec nulla augue, imperdiet sed orci at, tristique pretium ipsum. Mauris a lacus mauris. Integer pretium fringilla lacus vitae dignissim.', 'Ibanez', 892800, 1),\n(6, 'Viper-1000 - See Thru Black Cherry Satin', 'Vivamus eu purus luctus, porta orci et, gravida nulla. Duis elementum lacus eu arcu ullamcorper tincidunt. Integer quis sem et ante mollis finibus vitae et nunc. Sed porttitor interdum ipsum, sit amet varius dui convallis non. Mauris lobortis erat ac urna dictum mollis. Nam luctus urna quis erat venenatis, imperdiet dapibus est sodales.', 'ESP LTD', 329000, 4);\n\n--\n-- Indexek a kiírt táblákhoz\n--\n\n--\n-- A tábla indexei `instruments`\n--\nALTER TABLE `instruments`\n  ADD PRIMARY KEY (`id`);\n\n--\n-- A kiírt táblák AUTO_INCREMENT értéke\n--\n\n--\n-- AUTO_INCREMENT a táblához `instruments`\n--\nALTER TABLE `instruments`\n  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;\nCOMMIT;\n\n/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;\n/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;\n/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;\n" },
    { "timestamp": 0, "fileName": ".htaccess", "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv DEPLOYMENT_ENV DEV\n\n  RewriteCond %{REQUEST_URI} ^.*static/(.*)\n  RewriteRule ^(.*)$ src/build/static/%1 [END]\n\n  RewriteCond %{REQUEST_URI} ^.*manifest.json\n  RewriteRule ^(.*)$ src/build/manifest.json [END]\n\n  RewriteCond %{REQUEST_URI} ^.*logo192\n  RewriteRule ^(.*)$ src/build/logo192.png [END]\n\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  # Minden más esetben az index.php-t futtasd le\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n" },
    { "timestamp": 0, "fileName": "index.php", "content": "<?php\n\necho \"PHP fut\";" },
    { "timestamp": 132.966, "fileName": "index.php", "content": "<?php\n\necho \"PHP fut\";" },
    { "timestamp": 134.566, "fileName": "index.php", "content": "<?php\n\n\necho \"PHP fut\";" },
    { "timestamp": 135.099, "fileName": "index.php", "content": "<?php\n\n//\necho \"PHP fut\";" },
    { "timestamp": 135.25, "fileName": "index.php", "content": "<?php\n\n// \necho \"PHP fut\";" },
    { "timestamp": 135.866, "fileName": "index.php", "content": "<?php\n\n// Ro\necho \"PHP fut\";" },
    { "timestamp": 136.199, "fileName": "index.php", "content": "<?php\n\n// Route\necho \"PHP fut\";" },
    { "timestamp": 136.25, "fileName": "index.php", "content": "<?php\n\n// Router\necho \"PHP fut\";" },
    { "timestamp": 136.9, "fileName": "index.php", "content": "<?php\n\n// Router \necho \"PHP fut\";" },
    { "timestamp": 137.116, "fileName": "index.php", "content": "<?php\n\n// Router - \necho \"PHP fut\";" },
    { "timestamp": 138.366, "fileName": "index.php", "content": "<?php\n\n// Router - út\necho \"PHP fut\";" },
    {
      "timestamp": 139.183,
      "fileName": "index.php",
      "content": "<?php\n\n// Router - útvonalválasztó\necho \"PHP fut\";"
    },
    {
      "timestamp": 141.333,
      "fileName": "index.php",
      "content": "<?php\n\n// Router - útvonalválasztó\n// \necho \"PHP fut\";"
    },
    {
      "timestamp": 141.666,
      "fileName": "index.php",
      "content": "<?php\n\n// Router - útvonalválasztó\n// metho\necho \"PHP fut\";"
    },
    {
      "timestamp": 141.9,
      "fileName": "index.php",
      "content": "<?php\n\n// Router - útvonalválasztó\n// method\necho \"PHP fut\";"
    },
    {
      "timestamp": 142.4,
      "fileName": "index.php",
      "content": "<?php\n\n// Router - útvonalválasztó\n// method, p\necho \"PHP fut\";"
    },
    {
      "timestamp": 142.716,
      "fileName": "index.php",
      "content": "<?php\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 221.8,
      "fileName": "index.php",
      "content": "<?php\n\n\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 228.766,
      "fileName": "index.php",
      "content": "<?php\n\nrequir\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 229.233,
      "fileName": "index.php",
      "content": "<?php\n\nrequire\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 230.183,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 230.449,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 230.65,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 230.783,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 231.55,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/au\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 232.449,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    {
      "timestamp": 233.333,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"
    },
    { "timestamp": 255.8, "fileName": ".gitignore", "content": "vendo" },
    { "timestamp": 256.016, "fileName": ".gitignore", "content": "vendor" },
    {
      "timestamp": 309.616,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n\n"
    },
    {
      "timestamp": 310.516,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/users', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 344.649,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 345.433,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 346.199,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instr', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 347.25,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 348.55,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'get');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 349.116,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getA');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 349.449,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAll');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 349.949,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInst');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 350.133,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstru');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 350.416,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrume');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 350.583,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrument');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 350.833,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstruments');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 351.016,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsH');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 351.283,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHan');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 351.6,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHand');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 351.75,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 356.433,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 372.449,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 375.1,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse;\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 375.433,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url();\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 376.266,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI']);\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 377.649,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], );\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 379.283,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_U);\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 380.783,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 397.616,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"
    },
    {
      "timestamp": 399.166,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nva\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"
    },
    {
      "timestamp": 399.283,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nvar\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"
    },
    {
      "timestamp": 400.266,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nvar_dump()\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"
    },
    {
      "timestamp": 400.583,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nvar_dump($dispatcher->dispatch($httpMethod, $uri))\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"
    },
    {
      "timestamp": 401.233,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nvar_dump($dispatcher->dispatch($httpMethod, $uri));\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"
    },
    {
      "timestamp": 446.833,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"
    },
    {
      "timestamp": 448.449,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"
    },
    {
      "timestamp": 466.183,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $\n        break;\n}\n"
    },
    {
      "timestamp": 466.766,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $hand\n        break;\n}\n"
    },
    {
      "timestamp": 467.033,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler\n        break;\n}\n"
    },
    {
      "timestamp": 467.583,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler()\n        break;\n}\n"
    },
    {
      "timestamp": 468.233,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($)\n        break;\n}\n"
    },
    {
      "timestamp": 468.483,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($va)\n        break;\n}\n"
    },
    {
      "timestamp": 468.816,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars)\n        break;\n}\n"
    },
    {
      "timestamp": 469.366,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 481.933,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nf\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 482.483,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction \n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 483.016,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 483.933,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler()\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 484.183,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler() \n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 484.449,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler() {}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 484.883,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler() {\n    \n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 488.166,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($v) {\n    \n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 488.3,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($va) {\n    \n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 489.1,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    \n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 492,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 493.75,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hang\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 493.966,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangsz\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 494.416,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 494.699,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer \"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 494.966,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer list\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 495.3,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 496.666,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 505.283,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    \n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 508.033,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 522.75,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 523.416,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 524.1,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 527,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 528.1,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars)\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 528.433,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 528.766,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 530.083,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"eghangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 530.133,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyhangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 530.649,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedihangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 531.016,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 553.233,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    \n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 553.616,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 559.899,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    \n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 560.616,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 570.183,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    \n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 571.316,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 581.416,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 583.233,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 586.899,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 610.149,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 613.2,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 613.85,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 644.566,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 648.549,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    \n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 649.7,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 655.866,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    \n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 656.266,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 658.7,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    \n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 658.883,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 660.733,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    \n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 661.166,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 662.033,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump()\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 662.633,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($)\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 662.983,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($inst)\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 663.316,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($instr)\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 663.649,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($instruments)\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 664.116,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 696.399,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    json($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 696.7,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    json_($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 697.399,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    json_en($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 698.649,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 706.516,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    echojson_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 706.566,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 712.2,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    \n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 713.35,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    he\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 713.933,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header()\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 714.2,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 716.6,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Co')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 716.75,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Cont')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 717.466,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 718.216,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 718.616,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 719.149,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: ')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 719.716,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: ap')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 719.916,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: appli')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 720.583,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 721.283,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application/')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 721.633,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application/jso')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 721.95,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application/json')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 722.783,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application/json');\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 728,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    header('Content-type: application/json');\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    },
    {
      "timestamp": 728.233,
      "fileName": "index.php",
      "content": "<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    header('Content-type: application/json');\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"
    }
  ]
  