[{"timestamp":127.183,"fileName":"index.php","content":"<?php\n\necho \"PHP fut\";"},{"timestamp":128.783,"fileName":"index.php","content":"<?php\n\n\necho \"PHP fut\";"},{"timestamp":129.316,"fileName":"index.php","content":"<?php\n\n//\necho \"PHP fut\";"},{"timestamp":129.466,"fileName":"index.php","content":"<?php\n\n// \necho \"PHP fut\";"},{"timestamp":130.083,"fileName":"index.php","content":"<?php\n\n// Ro\necho \"PHP fut\";"},{"timestamp":130.416,"fileName":"index.php","content":"<?php\n\n// Route\necho \"PHP fut\";"},{"timestamp":130.466,"fileName":"index.php","content":"<?php\n\n// Router\necho \"PHP fut\";"},{"timestamp":131.116,"fileName":"index.php","content":"<?php\n\n// Router \necho \"PHP fut\";"},{"timestamp":131.333,"fileName":"index.php","content":"<?php\n\n// Router - \necho \"PHP fut\";"},{"timestamp":132.583,"fileName":"index.php","content":"<?php\n\n// Router - út\necho \"PHP fut\";"},{"timestamp":133.4,"fileName":"index.php","content":"<?php\n\n// Router - útvonalválasztó\necho \"PHP fut\";"},{"timestamp":135.55,"fileName":"index.php","content":"<?php\n\n// Router - útvonalválasztó\n// \necho \"PHP fut\";"},{"timestamp":135.883,"fileName":"index.php","content":"<?php\n\n// Router - útvonalválasztó\n// metho\necho \"PHP fut\";"},{"timestamp":136.116,"fileName":"index.php","content":"<?php\n\n// Router - útvonalválasztó\n// method\necho \"PHP fut\";"},{"timestamp":136.616,"fileName":"index.php","content":"<?php\n\n// Router - útvonalválasztó\n// method, p\necho \"PHP fut\";"},{"timestamp":136.933,"fileName":"index.php","content":"<?php\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":216.016,"fileName":"index.php","content":"<?php\n\n\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":222.983,"fileName":"index.php","content":"<?php\n\nrequir\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":223.449,"fileName":"index.php","content":"<?php\n\nrequire\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":224.4,"fileName":"index.php","content":"<?php\n\nrequire \n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":224.666,"fileName":"index.php","content":"<?php\n\nrequire \"\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":224.866,"fileName":"index.php","content":"<?php\n\nrequire \"./\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":225,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":225.766,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/au\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":226.666,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\"\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":227.55,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\necho \"PHP fut\";"},{"timestamp":250.016,"fileName":".gitignore","content":"vendo"},{"timestamp":250.233,"fileName":".gitignore","content":"vendor"},{"timestamp":303.833,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n\n"},{"timestamp":304.733,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/users', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":338.866,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":339.649,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":340.416,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instr', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":341.466,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'get_all_users_handler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":342.766,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'get');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":343.333,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getA');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":343.666,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAll');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":344.166,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInst');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":344.35,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstru');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":344.633,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrume');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":344.8,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrument');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":345.05,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstruments');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":345.233,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsH');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":345.5,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHan');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":345.816,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHand');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":345.966,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    // {id} must be a number (\\d+)\n    $r->addRoute('GET', '/user/{id:\\d+}', 'get_user_handler');\n    // The /{title} suffix is optional\n    $r->addRoute('GET', '/articles/{id:\\d+}[/{title}]', 'get_article_handler');\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":350.649,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n// Strip query string (?foo=bar) and decode URI\nif (false !== $pos = strpos($uri, '?')) {\n    $uri = substr($uri, 0, $pos);\n}\n$uri = rawurldecode($uri);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":366.666,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = $_SERVER['REQUEST_URI'];\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":369.316,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse;\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":369.649,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url();\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":370.483,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI']);\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":371.866,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], );\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":373.5,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_U);\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":375,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":391.833,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"},{"timestamp":393.383,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nva\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"},{"timestamp":393.5,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nvar\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"},{"timestamp":394.483,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nvar_dump()\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"},{"timestamp":394.8,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nvar_dump($dispatcher->dispatch($httpMethod, $uri))\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"},{"timestamp":395.449,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nvar_dump($dispatcher->dispatch($httpMethod, $uri));\n\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"},{"timestamp":441.05,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n// $routeInfo = $dispatcher->dispatch($httpMethod, $uri);\n// switch ($routeInfo[0]) {\n//     case FastRoute\\Dispatcher::NOT_FOUND:\n//         // ... 404 Not Found\n//         break;\n//     case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n//         $allowedMethods = $routeInfo[1];\n//         // ... 405 Method Not Allowed\n//         break;\n//     case FastRoute\\Dispatcher::FOUND:\n//         $handler = $routeInfo[1];\n//         $vars = $routeInfo[2];\n//         // ... call $handler with $vars\n//         break;\n// }\n"},{"timestamp":442.666,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        break;\n}\n"},{"timestamp":460.399,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $\n        break;\n}\n"},{"timestamp":460.983,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $hand\n        break;\n}\n"},{"timestamp":461.25,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler\n        break;\n}\n"},{"timestamp":461.8,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler()\n        break;\n}\n"},{"timestamp":462.449,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($)\n        break;\n}\n"},{"timestamp":462.699,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($va)\n        break;\n}\n"},{"timestamp":463.033,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars)\n        break;\n}\n"},{"timestamp":463.583,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":476.149,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nf\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":476.699,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction \n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":477.233,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":478.149,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler()\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":478.399,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler() \n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":478.666,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler() {}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":479.1,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler() {\n    \n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":482.383,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($v) {\n    \n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":482.516,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($va) {\n    \n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":483.316,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    \n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":486.216,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":487.966,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hang\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":488.183,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangsz\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":488.633,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":488.916,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer \"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":489.183,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer list\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":489.516,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\"\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":490.883,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":499.5,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    \n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":502.25,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":516.966,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":517.633,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":518.316,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":521.216,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":522.316,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars)\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":522.649,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"hangszer lista\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":522.983,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":524.299,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"eghangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":524.35,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyhangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":524.866,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedihangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":525.233,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":547.45,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    \n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":547.833,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":554.116,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    \n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":554.833,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":564.399,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    \n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":565.533,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":575.633,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":577.45,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":581.116,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":604.366,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":607.416,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":608.066,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    echo \"hangszer lista\";\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":638.783,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":642.766,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    \n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":643.916,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":650.083,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    \n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":650.483,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":652.916,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    \n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":653.1,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":654.95,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    \n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":655.383,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":656.25,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump()\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":656.85,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($)\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":657.2,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($inst)\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":657.533,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($instr)\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":657.866,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($instruments)\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":658.333,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    var_dump($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":690.616,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    json($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":690.916,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    json_($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":691.616,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    json_en($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":692.866,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":700.733,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    echojson_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":700.783,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":706.416,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    \n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":707.566,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    he\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":708.149,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header()\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":708.416,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":710.816,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Co')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":710.966,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Cont')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":711.683,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":712.433,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":712.833,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":713.366,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: ')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":713.933,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: ap')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":714.133,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: appli')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":714.799,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":715.5,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application/')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":715.85,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application/jso')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":716.166,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application/json')\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":717,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    header('Content-type: application/json');\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":722.216,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    header('Content-type: application/json');\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"},{"timestamp":722.45,"fileName":"index.php","content":"<?php\n\nrequire \"./vendor/autoload.php\";\n\n// Router - útvonalválasztó\n// method, path\n\n$dispatcher = FastRoute\\simpleDispatcher(function(FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('GET', '/api/instruments', 'getAllInstrumentsHandler');\n    $r->addRoute('GET', '/api/instruments/{id}', 'getSingleInstrument');\n    $r->addRoute('POST', '/api/instruments', 'createInstrument');\n    $r->addRoute('PATCH', '/api/instruments/{id}', 'patchInstrument');\n    $r->addRoute('DELETE', '/api/instruments/{id}', 'deleteInstrument');\n\n});\n\nfunction getAllInstrumentsHandler($vars) {\n    $pdo = getConnection();\n    header('Content-type: application/json');\n    $statement = $pdo->prepare(\"SELECT * FROM instruments\");\n    $statement->execute();\n    $instruments = $statement->fetchAll(PDO::FETCH_ASSOC);\n    echo json_encode($instruments);\n}\n\nfunction getSingleInstrument($vars) {\n    var_dump($vars);\n    echo \"egyedi hangszer\";\n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\n\n// Fetch method and URI from somewhere\n$httpMethod = $_SERVER['REQUEST_METHOD'];\n$uri = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\n$routeInfo = $dispatcher->dispatch($httpMethod, $uri);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        // ... 404 Not Found\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        // ... 405 Method Not Allowed\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        // ... call $handler with $vars\n        $handler($vars);\n        break;\n}\n"}]