[
  {
    "timestamp": 0,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 29.983,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n\n      \nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 31.383,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 55.466,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    \n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 55.716,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n      \n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 56.666,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  { "timestamp": 82.799, "fileName": "Dockerfile", "content": "" },
  { "timestamp": 83.599, "fileName": "Dockerfile", "content": "FROM" },
  { "timestamp": 84.383, "fileName": "Dockerfile", "content": "FROM " },
  { "timestamp": 84.75, "fileName": "Dockerfile", "content": "FROM alpine:3.6" },
  { "timestamp": 86.75, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\n" },
  { "timestamp": 88.783, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\n\n\n" },
  { "timestamp": 90.049, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\nCOP\n\n" },
  { "timestamp": 90.4, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\nCOPY\n\n" },
  { "timestamp": 90.866, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\nCOPY \n\n" },
  { "timestamp": 91.616, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\nCOPY c\n\n" },
  { "timestamp": 92, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\nCOPY cron\n\n" },
  { "timestamp": 92.266, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\nCOPY cronjo\n\n" },
  { "timestamp": 92.799, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\nCOPY cronjobs\n\n" },
  { "timestamp": 102.783, "fileName": "cronjobs", "content": "* * * * *" },
  { "timestamp": 104.599, "fileName": "cronjobs", "content": "* * * * * " },
  { "timestamp": 105.766, "fileName": "cronjobs", "content": "* * * * * echo" },
  { "timestamp": 105.95, "fileName": "cronjobs", "content": "* * * * * echo \"teszt\"" },
  { "timestamp": 114.516, "fileName": "cronjobs", "content": "* * * * * echo \"teszt\"\n" },
  { "timestamp": 122.466, "fileName": "Dockerfile", "content": "FROM alpine:3.6\n\nCOPY cronjobs \n\n" },
  {
    "timestamp": 122.933,
    "fileName": "Dockerfile",
    "content": "FROM alpine:3.6\n\nCOPY cronjobs /etc/crontabs/root\n\n"
  },
  {
    "timestamp": 131.233,
    "fileName": "Dockerfile",
    "content": "FROM alpine:3.6\n\nCOPY cronjobs /etc/crontabs/root\n\n\n"
  },
  {
    "timestamp": 132.3,
    "fileName": "Dockerfile",
    "content": "FROM alpine:3.6\n\nCOPY cronjobs /etc/crontabs/root\n\nCMD [\"crond\", \"-f\", \"-d\", \"8\"]\n"
  },
  {
    "timestamp": 150.666,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    \n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 154.533,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    bui\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 155.283,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    buil\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 155.633,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 156.05,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 156.816,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      \n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 157.766,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      conte\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 158.233,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 159.4,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"\"\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 160.716,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./\"\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 161.15,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./wo\"\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 162.166,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./worker\"\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 163.983,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./worker\"\n      \n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 164.449,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./worker\"\n      doc\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 164.933,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./worker\"\n      dockerfile: \n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 166.05,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./worker\"\n      dockerfile: Do\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 166.25,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./worker\"\n      dockerfile: Doc\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 166.783,
    "fileName": "docker-compose.yml",
    "content": "version: \"3\"\nservices:\n  back:\n    build:\n      context: ./server\n      dockerfile: Dockerfile\n    volumes:\n      - ./server/src:/var/www/html/src\n      - ./server/.htaccess:/var/www/html/.htaccess\n    ports:\n      - \"8080:80\"\n    networks:\n      - pelda_net\n  pelda_host:\n    build:\n      context: ./db\n      dockerfile: Dockerfile\n    restart: always\n    environment:\n      MYSQL_DATABASE: \"test_db\"\n      MYSQL_USER: \"user\"\n      MYSQL_PASSWORD: \"password\"\n      MYSQL_ROOT_PASSWORD: \"password\"\n    ports:\n      - \"3333:3306\"\n    networks:\n      - pelda_net\n    expose:\n      - \"3333\"\n  phpmyadmin:\n    image: phpmyadmin/phpmyadmin\n    links:\n      - pelda_host\n    environment:\n      PMA_ARBITRARY: 1\n      PMA_HOST: mysql\n      PMA_PORT: 3306\n    restart: always\n    ports:\n      - 8181:80\n    networks:\n      - pelda_net\n    volumes:\n      - /sessions\n  worker:\n    build:\n      context: \"./worker\"\n      dockerfile: Dockerfile\n    networks:\n      - pelda_net\n\nnetworks:\n  pelda_net:\n    driver: bridge\n"
  },
  {
    "timestamp": 300,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 305,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler() \n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 327.866,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump()\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 328.283,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($)\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 328.683,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_)\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 329.066,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_P)\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 329.466,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST)\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 329.683,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST);\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 330.433,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST);\n    \n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 331,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 370.733,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 371.433,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 373.016,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] =);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 373.533,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] ==);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 373.6,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === );\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 373.649,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 374.266,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SER);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 374.55,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SERVER);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 375.016,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SERVER[]);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 375.533,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SERVER['']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 375.783,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SERVER['WOR']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 376.033,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SERVER['WORKE']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 376.35,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SERVER['WORKER']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 376.8,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SERVER['WORKER_']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 377.199,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    var_dump($_POST['key'] === $_SERVER['WORKER_KEY']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 382,
    "fileName": ".htaccess",
    "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  # Környezeti változók beállítása\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv SMTP_SENDER_EMAIL teszt@kodbazis.com\n  SetEnv SMTP_SENDER_NAME \"Kódbázis\"\n  SetEnv SMTP_USERNAME teszt@kodbazis.com\n  SetEnv SMTP_PASSWORD NkZdDesWdUYShRaS\n  SetEnv SMTP_HOST smtp.rackhost.hu\n  SetEnv SMTP_PORT 465\n\n  SetEnv RECIPIENT_EMAIL teszt@kodbazis.com\n\n  # Public mappa és index.php beállítása\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  RewriteCond %{REQUEST_URI} ^.*public/(.*)\n  RewriteRule ^(.*)$ src/public/%1 [END]\n\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n"
  },
  {
    "timestamp": 385.466,
    "fileName": ".htaccess",
    "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  # Környezeti változók beállítása\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv SMTP_SENDER_EMAIL teszt@kodbazis.com\n  SetEnv SMTP_SENDER_NAME \"Kódbázis\"\n  SetEnv SMTP_USERNAME teszt@kodbazis.com\n  SetEnv SMTP_PASSWORD NkZdDesWdUYShRaS\n  SetEnv SMTP_HOST smtp.rackhost.hu\n  SetEnv SMTP_PORT 465\n\n  SetEnv RECIPIENT_EMAIL teszt@kodbazis.com\n\n  \n\n  # Public mappa és index.php beállítása\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  RewriteCond %{REQUEST_URI} ^.*public/(.*)\n  RewriteRule ^(.*)$ src/public/%1 [END]\n\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n"
  },
  {
    "timestamp": 386.033,
    "fileName": ".htaccess",
    "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  # Környezeti változók beállítása\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv SMTP_SENDER_EMAIL teszt@kodbazis.com\n  SetEnv SMTP_SENDER_NAME \"Kódbázis\"\n  SetEnv SMTP_USERNAME teszt@kodbazis.com\n  SetEnv SMTP_PASSWORD NkZdDesWdUYShRaS\n  SetEnv SMTP_HOST smtp.rackhost.hu\n  SetEnv SMTP_PORT 465\n\n  SetEnv RECIPIENT_EMAIL teszt@kodbazis.com\n\n  S\n\n  # Public mappa és index.php beállítása\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  RewriteCond %{REQUEST_URI} ^.*public/(.*)\n  RewriteRule ^(.*)$ src/public/%1 [END]\n\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n"
  },
  {
    "timestamp": 386.35,
    "fileName": ".htaccess",
    "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  # Környezeti változók beállítása\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv SMTP_SENDER_EMAIL teszt@kodbazis.com\n  SetEnv SMTP_SENDER_NAME \"Kódbázis\"\n  SetEnv SMTP_USERNAME teszt@kodbazis.com\n  SetEnv SMTP_PASSWORD NkZdDesWdUYShRaS\n  SetEnv SMTP_HOST smtp.rackhost.hu\n  SetEnv SMTP_PORT 465\n\n  SetEnv RECIPIENT_EMAIL teszt@kodbazis.com\n\n  Set\n\n  # Public mappa és index.php beállítása\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  RewriteCond %{REQUEST_URI} ^.*public/(.*)\n  RewriteRule ^(.*)$ src/public/%1 [END]\n\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n"
  },
  {
    "timestamp": 386.55,
    "fileName": ".htaccess",
    "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  # Környezeti változók beállítása\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv SMTP_SENDER_EMAIL teszt@kodbazis.com\n  SetEnv SMTP_SENDER_NAME \"Kódbázis\"\n  SetEnv SMTP_USERNAME teszt@kodbazis.com\n  SetEnv SMTP_PASSWORD NkZdDesWdUYShRaS\n  SetEnv SMTP_HOST smtp.rackhost.hu\n  SetEnv SMTP_PORT 465\n\n  SetEnv RECIPIENT_EMAIL teszt@kodbazis.com\n\n  SetEnv \n\n  # Public mappa és index.php beállítása\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  RewriteCond %{REQUEST_URI} ^.*public/(.*)\n  RewriteRule ^(.*)$ src/public/%1 [END]\n\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n"
  },
  {
    "timestamp": 387.533,
    "fileName": ".htaccess",
    "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  # Környezeti változók beállítása\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv SMTP_SENDER_EMAIL teszt@kodbazis.com\n  SetEnv SMTP_SENDER_NAME \"Kódbázis\"\n  SetEnv SMTP_USERNAME teszt@kodbazis.com\n  SetEnv SMTP_PASSWORD NkZdDesWdUYShRaS\n  SetEnv SMTP_HOST smtp.rackhost.hu\n  SetEnv SMTP_PORT 465\n\n  SetEnv RECIPIENT_EMAIL teszt@kodbazis.com\n\n  SetEnv WORKER_KEY\n\n  # Public mappa és index.php beállítása\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  RewriteCond %{REQUEST_URI} ^.*public/(.*)\n  RewriteRule ^(.*)$ src/public/%1 [END]\n\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n"
  },
  {
    "timestamp": 388.833,
    "fileName": ".htaccess",
    "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  # Környezeti változók beállítása\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv SMTP_SENDER_EMAIL teszt@kodbazis.com\n  SetEnv SMTP_SENDER_NAME \"Kódbázis\"\n  SetEnv SMTP_USERNAME teszt@kodbazis.com\n  SetEnv SMTP_PASSWORD NkZdDesWdUYShRaS\n  SetEnv SMTP_HOST smtp.rackhost.hu\n  SetEnv SMTP_PORT 465\n\n  SetEnv RECIPIENT_EMAIL teszt@kodbazis.com\n\n  SetEnv WORKER_KEY \n\n  # Public mappa és index.php beállítása\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  RewriteCond %{REQUEST_URI} ^.*public/(.*)\n  RewriteRule ^(.*)$ src/public/%1 [END]\n\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n"
  },
  {
    "timestamp": 391.6,
    "fileName": ".htaccess",
    "content": "<IfModule mod_rewrite.c>\n  RewriteEngine On\n\n  # Környezeti változók beállítása\n  SetEnv DB_HOST pelda_host\n  SetEnv DB_NAME test_db\n  SetEnv DB_USER user\n  SetEnv DB_PASSWORD password\n\n  SetEnv SMTP_SENDER_EMAIL teszt@kodbazis.com\n  SetEnv SMTP_SENDER_NAME \"Kódbázis\"\n  SetEnv SMTP_USERNAME teszt@kodbazis.com\n  SetEnv SMTP_PASSWORD NkZdDesWdUYShRaS\n  SetEnv SMTP_HOST smtp.rackhost.hu\n  SetEnv SMTP_PORT 465\n\n  SetEnv RECIPIENT_EMAIL teszt@kodbazis.com\n\n  SetEnv WORKER_KEY syAsXYL4VykdTpAX\n\n  # Public mappa és index.php beállítása\n  RewriteCond %{REQUEST_URI} ^.*favicon\n  RewriteRule ^(.*)$ src/favicon.ico [END]\n\n  RewriteCond %{REQUEST_URI} ^.*public/(.*)\n  RewriteRule ^(.*)$ src/public/%1 [END]\n\n  RewriteRule (.*)  src/index.php [QSA]\n</IfModule>\n"
  },
  {
    "timestamp": 420.416,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] === $_SERVER['WORKER_KEY']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 421.366,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] == $_SERVER['WORKER_KEY']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 421.75,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']);\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 422.133,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {}\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 422.449,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY'])\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 423.966,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        \n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 425.183,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        htt\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 425.35,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        http_response_code()\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 426.25,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401)\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 426.983,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 427.55,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        \n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 427.983,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 430.116,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        re\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 430.85,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        return;\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 438.883,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] ? !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        return;\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 439.25,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] ?? !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        return;\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 439.566,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] ??  !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        return;\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 440.316,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] ?? '' !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        return;\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 441.35,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if($_POST['key'] ?? '') !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        return;\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 443.1,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if(($_POST['key'] ?? '') !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        return;\n    }\n    exit;\n\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 457.699,
    "fileName": "index.php",
    "content": "<?php\n\nrequire './vendor/autoload.php';\nrequire './Mailer.php';\n\n$method = $_SERVER[\"REQUEST_METHOD\"];\n$path = parse_url($_SERVER['REQUEST_URI'], PHP_URL_PATH);\n\nfunction home()\n{\n    echo render('home.phtml', [\n        'isSuccess' => isset($_GET['kuldesSikeres'])\n    ]);\n}\n\nfunction render($path, $params = [])\n{\n    ob_start();\n    require __DIR__ . '/views/' . $path;\n    return ob_get_clean();\n}\n\nfunction notFoundhandler()\n{\n    header('Location: /');\n}\n \nfunction submitMessageHandler()\n{\n    $pdo = getConnection();\n    $statement = $pdo->prepare(\"INSERT INTO `messages` \n    (`email`, `subject`, `body`, `status`, `numberOfAttempts`, `createdAt`) \n    VALUES \n    (?, ?, ?, ?, ?, ?);\");\n\n    $body = render(\"email-template.phtml\", [\n        'name' =>  $_POST['name'] ?? '',\n        'email' =>  $_POST['email'] ?? '',\n        'content' =>  $_POST['content'],\n    ]);\n\n    $statement->execute([\n        $_SERVER['RECIPIENT_EMAIL'],\n        \"Új üzenet érkezett\",\n        $body,\n        'notSent',\n        0,\n        time()\n    ]);\n\n    header('Location: /?kuldesSikeres=1#contactForm');   \n}\n\nfunction getConnection()\n{\n    return new PDO(\n        'mysql:host=' . $_SERVER['DB_HOST'] . ';dbname=' . $_SERVER['DB_NAME'],\n        $_SERVER['DB_USER'],\n        $_SERVER['DB_PASSWORD']\n    );\n}\n\nfunction sendMailsHandler()\n{\n    if(($_POST['key'] ?? '') !== $_SERVER['WORKER_KEY']) {\n        http_response_code(401);\n        echo json_encode(['error' => 'unauthorized']);\n        return;\n    }\n    \n    $pdo = getConnection();\n    $statement = $pdo->prepare(\n        \"SELECT * FROM messages \n        WHERE \n        status = 'notSent' AND \n        numberOfAttempts < 10 \n        ORDER BY createdAt ASC\"\n    );\n\n    $statement->execute();\n    $messages = $statement->fetchAll(PDO::FETCH_ASSOC);\n\n    foreach ($messages as $message) {\n        $pdo = getConnection();\n        $statement = $pdo->prepare(\n            \"UPDATE `messages` SET \n                status = 'sending', \n                numberOfAttempts = ? \n            WHERE id = ?;\"\n        );\n\n        $statement->execute([\n            (int)$message['numberOfAttempts'] + 1,\n            $message['id']\n        ]);\n\n        $isSent = sendMail(\n            $message['email'],\n            $message['subject'],\n            $message['body']\n        );\n\n        if ($isSent) {\n            $statement = $pdo->prepare(\n                \"UPDATE `messages` SET status = 'sent', sentAt = ? WHERE id = ?;\"\n            );\n            $statement->execute([\n                time(),\n                $message['id'],\n            ]);\n        } else {\n            $statement = $pdo->prepare(\"UPDATE `messages` SET status = 'notSent' WHERE id = ?;\");\n            $statement->execute([\n                $message['id']\n            ]);\n        }\n    }\n}\n\n$dispatcher = FastRoute\\simpleDispatcher(function (FastRoute\\RouteCollector $r) {\n    $r->addRoute('GET', '/', 'home');\n    $r->addRoute('POST', '/submit-message', 'submitMessageHandler');\n    $r->addRoute('POST', '/send-mails', 'sendMailsHandler');\n});\n\n$routeInfo = $dispatcher->dispatch($method, $path);\nswitch ($routeInfo[0]) {\n    case FastRoute\\Dispatcher::NOT_FOUND:\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::METHOD_NOT_ALLOWED:\n        $allowedMethods = $routeInfo[1];\n        notFoundHandler();\n        break;\n    case FastRoute\\Dispatcher::FOUND:\n        $handler = $routeInfo[1];\n        $vars = $routeInfo[2];\n        $handler($vars);\n        break;\n}"
  },
  {
    "timestamp": 467.816,
    "fileName": "cronjobs",
    "content": "* * * * * wget -O- -q --post-data 'key=syAsXYL4VykdTpAX' http://back/send-mail\ns\n"
  },
  {
    "timestamp": 469.283,
    "fileName": "cronjobs",
    "content": "* * * * * wget -O- -q --post-data 'key=syAsXYL4VykdTpAX' http://back/send-mails\n"
  }
]
