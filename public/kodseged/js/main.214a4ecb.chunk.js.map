{"version":3,"sources":["OnSite.js","YoutubeWithAssistantApp.js","GifApp.js","GifWithAssistantApp.js","YoutubeApp.js","App.js","serviceWorker.js","index.js"],"names":["OnSiteApp","fileChangesURL","videoURL","useState","fileChanges","setFileChanges","useEffect","a","fetch","catch","console","log","res","ok","json","map","change","languageName","toExtension","fileName","ref","useRef","setInit","length","className","onLoadedData","id","src","controls","width","crossOrigin","current","Renderer","videoReference","files","setRenderedFiles","active","setActive","explicitelyActive","setExplicitelyActive","tick","items","filter","item","timestamp","currentTime","pop","content","setInterval","clearInterval","addEventListener","latestChangedFileName","latestTimestamp","fileNames","Object","keys","reduce","acc","cr","ret","values","currentlyActiveItem","style","height","clientHeight","backgroundColor","onClick","entries","key","color","parseInt","borderBottom","display","cursor","file","YoutubeWithAssistantApp","videoId","video","isInit","videoStateChanged","setVideoStateChanged","opts","onReady","e","target","onStateChange","data","prev","Renderer2","getCurrentTime","f","gifFrames","require","GifApp","gifUrl","frames","setFrames","rawFrames","total","url","outputType","cumulative","rawFrames1","dispatch","type","useReducer","state","action","calcCount","Error","concat","getImage","shift","setTimeout","role","Math","floor","canvas","createRef","setState","parentRef","offsetWidth","img","scale","getContext","drawImage","formatLabel","minValue","maxValue","value","onChange","GifWithAssistantApp","showFrameNumber","layout","text","txt","parser","DOMParser","xmlDoc","parseFromString","Array","from","firstChild","children","element","localName","innerHTML","replace","parentHeight","setParentHeight","offsetHeight","num","val","CodeRenderer","frame","undefined","latestFrame","YoutubeApp","App","gifURL","codeAssistantYoutube","youtube","onSite","gif","codeAssistantGif","fName","substr","lastIndexOf","Boolean","window","location","hostname","match","roots","document","getElementsByClassName","forEach","root","ReactDOM","render","StrictMode","dataset","filechangesurl","videourl","videoid","gifurl","showframenumber","navigator","serviceWorker","ready","then","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.214a4ecb.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useRef, useState } from \"react\";\nimport { toExtension } from \"./App\";\nimport Highlight from \"react-highlight\";\n\nexport function OnSiteApp({ fileChangesURL, videoURL }) {\n    const [fileChanges, setFileChanges] = useState([]);\n    useEffect(() => {\n      (async () => {\n        const res = await fetch(fileChangesURL).catch(console.log);\n        if (!res.ok) {\n          return;\n        }\n        const fileChanges = await res.json().catch(console.log);\n        if (!fileChanges) {\n          return;\n        }\n        setFileChanges(fileChanges.map((change) => ({ ...change, languageName: toExtension(change.fileName) })));\n      })();\n    }, []);\n  \n    const ref = useRef();\n    const [isInit, setInit] = useState(false);\n  \n    if (!fileChanges.length) {\n      return <div className=\"text-center\">Loading...</div>;\n    }\n  \n    return (\n      <Fragment>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-8 p-0\">\n              <video\n                onLoadedData={() => {\n                  setInit(true);\n                }}\n                className=\"w-100\"\n                id=\"video\"\n                src={videoURL}\n                controls\n                width=\"100%\"\n                crossOrigin=\"anonymous\"\n                ref={ref}\n              ></video>\n            </div>\n            {ref.current ? <Renderer className=\"w-100\" fileChanges={fileChanges} videoReference={ref} /> : \"\"}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n  \n  function Renderer({ fileChanges, videoReference }) {\n    const files = useRef({});\n    const [renderedFiles, setRenderedFiles] = useState({});\n    const [active, setActive] = useState(\"\");\n    const [explicitelyActive, setExplicitelyActive] = useState(\"\");\n    const id = useRef();\n  \n    useEffect(() => {\n      id.current = setInterval(tick, 1000);\n  \n      return () => {\n        clearInterval(id.current);\n      };\n    }, []);\n  \n    useEffect(() => {\n      videoReference.current.addEventListener(\"seeked\", () => {\n        const fileNames = Object.keys(fileChanges.reduce((acc, cr) => ({ ...acc, [cr.fileName]: cr }), {}));\n  \n        let ret = {};\n        for (let fileName of fileNames) {\n          const items = fileChanges\n            .filter((change) => change.fileName === fileName)\n            .filter((item) => item.timestamp < videoReference.current.currentTime);\n          if (!items.length) {\n            continue;\n          }\n          const item = items.pop();\n          ret[fileName] = item;\n        }\n  \n        files.current = ret;\n        let latestChangedFileName;\n        let latestTimestamp;\n        for (let item of Object.values(ret)) {\n          if (item.timestamp < latestTimestamp) {\n            continue;\n          }\n          latestTimestamp = item.timestamp;\n          latestChangedFileName = item.fileName;\n        }\n  \n        setActive(latestChangedFileName);\n        setExplicitelyActive(\"\");\n      });\n    }, []);\n  \n    function tick() {\n      if (!videoReference.current) {\n        return;\n      }\n  \n      const items = fileChanges.filter((item) => item.timestamp < videoReference.current.currentTime);\n      if (!items.length) {\n        return;\n      }\n      const item = items.pop();\n      if (files.current[item.fileName]?.content === item.content) {\n        return;\n      }\n  \n      files.current = {\n        ...files.current,\n        [item.fileName]: item,\n      };\n      setRenderedFiles(files.current);\n      setActive(item.fileName);\n    }\n  \n    const currentlyActiveItem = explicitelyActive ? explicitelyActive : active;\n    return (\n      <div\n        className=\"col-md-4 p-0 overflow-auto\"\n        style={{ height: videoReference.current.clientHeight, backgroundColor: \"rgb(35, 36, 31)\" }}\n      >\n        <div className={\"border-bottom \" + (explicitelyActive ? \"p-2\" : \"\")}>\n          {explicitelyActive ? (\n            <button\n              className={\"btn btn-sm btn-outline-success\"}\n              onClick={() => {\n                if (!explicitelyActive) {\n                  return;\n                }\n                setExplicitelyActive(\"\");\n              }}\n            >\n              Követés bekapcsolása\n            </button>\n          ) : (\n            \"\"\n          )}\n        </div>\n        {Object.entries(files.current).map(([fileName, file]) => (\n          <div\n            key={fileName}\n            className=\"text-center\"\n            style={{\n              backgroundColor: currentlyActiveItem === fileName ? \"black\" : \"rgb(35, 36, 31)\",\n              color: currentlyActiveItem === fileName ? \"white\" : \"grey\",\n              width: parseInt(100 / Object.values(files.current).length) + \"%\",\n              borderBottom: \"1px solid lightgrey\",\n              height: \"30px\",\n              display: \"inline-block\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => {\n              if (active === fileName && !explicitelyActive) {\n                return;\n              }\n              setExplicitelyActive(fileName);\n            }}\n          >\n            {fileName}\n          </div>\n        ))}\n        {Object.entries(files.current)\n          .filter(([fileName, file]) => currentlyActiveItem === fileName)\n          .map(([fileName, file]) => (\n            <div key={fileName} className=\"font-family-monospace\">\n              <Highlight className={file.languageName}>{file.content}</Highlight>\n            </div>\n          ))}\n      </div>\n    );\n  }","import React, { createRef, Fragment, useEffect, useRef, useState } from \"react\";\nimport { toExtension } from \"./App\";\nimport Highlight from \"react-highlight\";\nimport Youtube from \"react-youtube\";\n\nexport function YoutubeWithAssistantApp({ fileChangesURL, videoId }) {\n  const video = useRef();\n  const [isInit, setInit] = useState();\n  const [videoStateChanged, setVideoStateChanged] = useState(0);\n\n  const [fileChanges, setFileChanges] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const res = await fetch(fileChangesURL).catch(console.log);\n      if (!res.ok) {\n        return;\n      }\n      const fileChanges = await res.json().catch(console.log);\n      if (!fileChanges.length) {\n        return;\n      }\n      setFileChanges(fileChanges.map((change) => ({ ...change, languageName: toExtension(change.fileName) })));\n    })();\n  }, []);\n\n  if (!fileChanges.length) {\n    return <div className=\"text-center\">Loading...</div>;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-12 p-0\">\n            <Youtube\n              opts={{\n                width: \"100%\",\n              }}\n              videoId={videoId}\n              onReady={(e) => {\n                video.current = e.target;\n                setInit(1);\n              }}\n              onStateChange={(e) => {\n                if (e.data !== 2) {\n                  return;\n                }\n                setVideoStateChanged((prev) => prev + 1);\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          {isInit ? (\n            <Renderer2\n              className=\"w-100\"\n              fileChanges={fileChanges}\n              videoReference={video}\n              videoStateChanged={videoStateChanged}\n            />\n          ) : (\n            \"Loading...\"\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nfunction Renderer2({ fileChanges, videoReference, videoStateChanged }) {\n  const files = useRef({});\n  const [renderedFiles, setRenderedFiles] = useState({});\n  const [active, setActive] = useState(\"\");\n  const [explicitelyActive, setExplicitelyActive] = useState(\"\");\n  const id = useRef();\n\n  useEffect(() => {\n    const fileNames = Object.keys(fileChanges.reduce((acc, cr) => ({ ...acc, [cr.fileName]: cr }), {}));\n\n    let ret = {};\n    for (let fileName of fileNames) {\n      const items = fileChanges\n        .filter((change) => change.fileName === fileName)\n        .filter((item) => item.timestamp < videoReference.current.getCurrentTime());\n      if (!items.length) {\n        continue;\n      }\n      const item = items.pop();\n      ret[fileName] = item;\n    }\n\n    files.current = ret;\n    let latestChangedFileName;\n    let latestTimestamp;\n    for (let item of Object.values(ret)) {\n      if (item.timestamp < latestTimestamp) {\n        continue;\n      }\n      latestTimestamp = item.timestamp;\n      latestChangedFileName = item.fileName;\n    }\n\n    setActive(latestChangedFileName);\n    setExplicitelyActive(\"\");\n  }, [videoStateChanged]);\n\n  useEffect(() => {\n    id.current = setInterval(tick, 1000);\n\n    return () => {\n      clearInterval(id.current);\n    };\n  }, []);\n\n  function tick() {\n    if (!videoReference.current) {\n      return;\n    }\n\n    const items = fileChanges.filter((item) => item.timestamp < videoReference.current.getCurrentTime());\n    if (!items.length) {\n      return;\n    }\n    const item = items.pop();\n    if (files.current[item.fileName]?.content === item.content) {\n      return;\n    }\n\n    files.current = {\n      ...files.current,\n      [item.fileName]: item,\n    };\n    setRenderedFiles(files.current);\n    setActive(item.fileName);\n  }\n\n  const currentlyActiveItem = explicitelyActive ? explicitelyActive : active;\n  return (\n    <div\n      className=\"col-md-12 p-0 overflow-auto\"\n      style={{ height: videoReference.current.f.clientHeight, backgroundColor: \"rgb(35, 36, 31)\" }}\n    >\n      <div className={\"border-bottom \" + (explicitelyActive ? \"p-2\" : \"\")}>\n        {explicitelyActive ? (\n          <button\n            className={\"btn btn-sm btn-outline-success\"}\n            onClick={() => {\n              if (!explicitelyActive) {\n                return;\n              }\n              setExplicitelyActive(\"\");\n            }}\n          >\n            Követés bekapcsolása\n          </button>\n        ) : (\n          \"\"\n        )}\n      </div>\n      {Object.entries(files.current).map(([fileName, file]) => (\n        <div\n          key={fileName}\n          className=\"text-center\"\n          style={{\n            backgroundColor: currentlyActiveItem === fileName ? \"black\" : \"rgb(35, 36, 31)\",\n            color: currentlyActiveItem === fileName ? \"white\" : \"grey\",\n            width: parseInt(100 / Object.values(files.current).length) + \"%\",\n            borderBottom: \"1px solid lightgrey\",\n            height: \"30px\",\n            display: \"inline-block\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            if (active === fileName && !explicitelyActive) {\n              return;\n            }\n            setExplicitelyActive(fileName);\n          }}\n        >\n          {fileName}\n        </div>\n      ))}\n      {Object.entries(files.current)\n        .filter(([fileName, file]) => currentlyActiveItem === fileName)\n        .map(([fileName, file]) => (\n          <div key={fileName} className=\"font-family-monospace\">\n            <Highlight className={file.languageName}>{file.content}</Highlight>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import React, { createRef, Fragment, useEffect, useReducer, useRef, useState } from \"react\";\nimport InputRange from \"react-input-range\";\nconst gifFrames = require(\"gif-frames\");\n\nexport function GifApp({ gifUrl }) {\n  const [frames, setFrames] = useState([]);\n  const rawFrames = useRef([]);\n  const total = useRef(10);\n\n  useEffect(() => {\n    (async () => {\n      const rawFrames1 = await gifFrames({ url: gifUrl, frames: \"all\", outputType: \"canvas\", cumulative: true });\n      total.current = rawFrames1.length;\n      rawFrames.current = rawFrames1;\n      dispatch({ type: \"UPDATE\" });\n    })();\n  }, []);\n\n  let calcCountReducer = (state, action) => {\n    switch (action.type) {\n      case \"UPDATE\":\n        return { ...state, calcCount: state.calcCount + 1 };\n      default:\n        throw new Error(\"Invalid Action Type\");\n    }\n  };\n  let [state, dispatch] = useReducer(calcCountReducer, { calcCount: 0 });\n\n  useEffect(() => {\n    if (!rawFrames.current[0]) {\n      return;\n    }\n\n    setFrames((prev) => {\n      if (!rawFrames.current[0]) {\n        return prev;\n      }\n\n      return prev.concat([rawFrames.current[0].getImage()]);\n    });\n    rawFrames.current.shift();\n    setTimeout(() => {\n      dispatch({ type: \"UPDATE\" });\n    }, 0);\n  }, [state.calcCount]);\n\n  if (state.calcCount < total.current) {\n    return (\n      <div className=\"text-center p-4 border bg-light\">\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"spinner-border text-danger mr-2\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          <span className=\"mt-1\">({Math.floor((state.calcCount / total.current) * 100)}%)</span>\n        </div>\n      </div>\n    );\n  }\n\n  return <Renderer frames={frames} />;\n}\n\nfunction Renderer({ frames }) {\n  const canvas = createRef();\n  const [state, setState] = useState(0);\n  const parentRef = useRef();\n\n  useEffect(() => {\n    if (!canvas.current) {\n      return;\n    }\n\n    const width = parentRef.current.offsetWidth;\n\n    const img = frames[0];\n    const scale = width / img.width < 1 ? width / img.width : 1;\n    canvas.current.width = img.width * scale;\n    canvas.current.height = img.height * scale;\n    canvas.current.getContext(\"2d\").scale(scale, scale);\n    canvas.current.getContext(\"2d\").drawImage(img, 0, 0);\n  }, [canvas]);\n\n  useEffect(() => {\n    if (!frames[state]) {\n      return;\n    }\n    const img = frames[state];\n    const width = parentRef.current.offsetWidth;\n    const scale = width / img.width < 1 ? width / img.width : 1;\n    canvas.current.width = img.width * scale;\n    canvas.current.height = img.height * scale;\n    canvas.current.getContext(\"2d\").scale(scale, scale);\n    canvas.current.getContext(\"2d\").drawImage(img, 0, 0);\n  }, [state]);\n\n  return frames.length ? (\n    <div className=\"text-center\" ref={parentRef}>\n      <canvas className=\"text-center m-auto\" ref={canvas} />\n      <InputRange formatLabel={() => \"\"} minValue={0} maxValue={frames.length} value={state} onChange={setState} />\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React, { createRef, Fragment, useEffect, useReducer, useRef, useState } from \"react\";\nimport InputRange from \"react-input-range\";\nimport Highlight from \"react-highlight\";\nimport { toExtension } from \"./App\";\nconst gifFrames = require(\"gif-frames\");\n\nexport function GifWithAssistantApp({ fileChangesURL, gifUrl, showFrameNumber, layout }) {\n\n  const [fileChanges, setFileChanges] = useState([]);\n\n  const [frames, setFrames] = useState([]);\n  const rawFrames = useRef([]);\n  const total = useRef(10);\n\n  useEffect(() => {\n    (async () => {\n      const rawFrames1 = await gifFrames({ url: gifUrl, frames: \"all\", outputType: \"canvas\", cumulative: true });\n      total.current = rawFrames1.length;\n      rawFrames.current = rawFrames1;\n      dispatch({ type: \"UPDATE\" });\n    })();\n  }, []);\n\n  let calcCountReducer = (state, action) => {\n    switch (action.type) {\n      case \"UPDATE\":\n        return { ...state, calcCount: state.calcCount + 1 };\n      default:\n        throw new Error(\"Invalid Action Type\");\n    }\n  };\n  let [state, dispatch] = useReducer(calcCountReducer, { calcCount: 0 });\n\n  useEffect(() => {\n    if (!rawFrames.current[0]) {\n      return;\n    }\n\n    setFrames((prev) => {\n      if (!rawFrames.current[0]) {\n        return prev;\n      }\n\n      return prev.concat([rawFrames.current[0].getImage()]);\n    });\n    rawFrames.current.shift();\n    setTimeout(() => {\n      dispatch({ type: \"UPDATE\" });\n    }, 0);\n  }, [state.calcCount]);\n\n  useEffect(() => {\n    (async () => {\n      const res = await fetch(fileChangesURL).catch(console.log);\n\n      if (!res.ok) {\n        return;\n      }\n      const txt = await res.text();\n\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(txt, \"text/xml\");\n      const fileChanges = Array.from(xmlDoc.firstChild.children)\n        .map((item) =>\n          Array.from(item.children).reduce(\n            (acc, element) => ({\n              ...acc,\n              [element.localName]: element.localName === \"frame\" ? parseInt(element.innerHTML) : element.innerHTML,\n            }),\n            {}\n          )\n        )\n        .map((item) => ({ ...item, content: item.content.replace(\"&gt;\", \">\").replace(\"&lt;\", \"<\") }));\n\n      setFileChanges(fileChanges.map((change) => ({ ...change, languageName: toExtension(change.fileName) })));\n    })();\n  }, []);\n\n\n  if (state.calcCount < total.current) {\n    return (\n      <div className=\"text-center p-4 border bg-light\">\n        <div className=\"d-flex justify-content-center\">\n          <div className=\"spinner-border text-danger mr-2\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          <span className=\"mt-1\">({Math.floor((state.calcCount / total.current) * 100)}%)</span>\n        </div>\n      </div>\n    );\n  }\n\n  return <Renderer frames={frames} fileChanges={fileChanges} showFrameNumber={showFrameNumber} layout={layout} />;\n}\n\nfunction Renderer({ frames, fileChanges, showFrameNumber, layout }) {\n  const canvas = createRef();\n  const [state, setState] = useState(0);\n  const parentRef = useRef();\n  const [parentHeight, setParentHeight] = useState(0);\n\n  useEffect(() => {\n    setParentHeight(parentRef.current.offsetHeight);\n  }, [parentRef.current]);\n\n  useEffect(() => {\n    if (!canvas.current) {\n      return;\n    }\n\n    const width = parentRef.current.offsetWidth;\n    const img = frames[0];\n    const scale = width / img.width < 1 ? width / img.width : 1;\n    canvas.current.width = img.width * scale;\n    canvas.current.height = img.height * scale;\n    canvas.current.getContext(\"2d\").scale(scale, scale);\n    canvas.current.getContext(\"2d\").drawImage(img, 0, 0);\n  }, [canvas]);\n\n  useEffect(() => {\n    if (!frames[state]) {\n      return;\n    }\n    const img = frames[state];\n    const width = parentRef.current.offsetWidth;\n    const scale = width / img.width < 1 ? width / img.width : 1;\n    canvas.current.width = img.width * scale;\n    canvas.current.height = img.height * scale;\n    canvas.current.getContext(\"2d\").scale(scale, scale);\n    canvas.current.getContext(\"2d\").drawImage(img, 0, 0);\n  }, [state]);\n\n  if (layout === \"inline\") {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-7 p-0 mb-5\" ref={parentRef}>\n          <canvas ref={canvas} />\n          <InputRange\n            formatLabel={(num) => (showFrameNumber ? num : \"\")}\n            minValue={0}\n            maxValue={frames.length}\n            value={state}\n            onChange={(val) => {\n              setState(val !== 0 ? val - 1 : 0);\n            }}\n          />\n        </div>\n        <div className=\"col-md-5 p-0 m-0\">\n          {parentRef.current ? <CodeRenderer fileChanges={fileChanges} frame={state} height={parentHeight} /> : \"\"}\n        </div>\n      </div>\n    );\n  }\n\n  return frames.length !== undefined ? (\n    <Fragment>\n      <div className=\"text-center mb-5\" ref={parentRef}>\n        <canvas ref={canvas} />\n        <InputRange\n          formatLabel={(num) => (showFrameNumber ? num : \"\")}\n          minValue={0}\n          maxValue={frames.length}\n          value={state}\n          onChange={(val) => {\n            setState(val !== 0 ? val - 1 : 0);\n          }}\n        />\n      </div>\n      {parentRef.current ? <CodeRenderer fileChanges={fileChanges} frame={state} height={parentHeight} /> : \"\"}\n    </Fragment>\n  ) : (\n    \"\"\n  );\n}\n\nfunction CodeRenderer({ fileChanges, frame, height }) {\n  const files = useRef({});\n  const [renderedFiles, setRenderedFiles] = useState({});\n  const [active, setActive] = useState(\"\");\n  const [explicitelyActive, setExplicitelyActive] = useState(\"\");\n\n  useEffect(() => {\n    setExplicitelyActive(\"\");\n    const fileNames = Object.keys(fileChanges.reduce((acc, cr) => ({ ...acc, [cr.fileName]: cr }), {}));\n\n    let ret = {};\n    for (let fileName of fileNames) {\n      const items = fileChanges.filter((change) => change.fileName === fileName).filter((item) => item.frame < frame);\n      if (!items.length) {\n        continue;\n      }\n      const item = items.pop();\n      ret[fileName] = item;\n    }\n\n    files.current = ret;\n    let latestChangedFileName;\n    let latestFrame;\n    for (let item of Object.values(ret)) {\n      if (item.frame < latestFrame) {\n        continue;\n      }\n      latestFrame = item.frame;\n      latestChangedFileName = item.fileName;\n    }\n    setActive(latestChangedFileName);\n  }, [frame]);\n\n  const currentlyActiveItem = explicitelyActive ? explicitelyActive : active;\n  return (\n    <div className=\"col-md-12 p-0 overflow-auto\" style={{ height: height, backgroundColor: \"rgb(35, 36, 31)\" }}>\n      {Object.entries(files.current).map(([fileName, file]) => (\n        <div\n          key={fileName}\n          className=\"text-center\"\n          style={{\n            backgroundColor: currentlyActiveItem === fileName ? \"black\" : \"rgb(35, 36, 31)\",\n            color: currentlyActiveItem === fileName ? \"white\" : \"grey\",\n            width: parseInt(100 / Object.values(files.current).length) + \"%\",\n            borderBottom: \"1px solid lightgrey\",\n            display: \"inline-block\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            if (active === fileName && !explicitelyActive) {\n              return;\n            }\n            setExplicitelyActive(fileName);\n          }}\n        >\n          {fileName}\n        </div>\n      ))}\n      {Object.entries(files.current)\n        .filter(([fileName, file]) => currentlyActiveItem === fileName)\n        .map(([fileName, file]) => (\n          <div key={fileName} className=\"font-family-monospace\">\n            <Highlight className={file.languageName}>{file.content}</Highlight>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Youtube from \"react-youtube\";\n\nexport function YoutubeApp({ videoId }) {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-12 p-0\">\n          <Youtube\n            opts={{\n              width: \"100%\",\n            }}\n            videoId={videoId}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport \"../node_modules/highlight.js/styles/monokai-sublime.css\";\nimport \"react-input-range/lib/css/index.css\";\nimport { OnSiteApp } from \"./OnSite\";\nimport { YoutubeWithAssistantApp } from \"./YoutubeWithAssistantApp\";\nimport { GifApp } from \"./GifApp\";\nimport { GifWithAssistantApp } from \"./GifWithAssistantApp\";\nimport { YoutubeApp } from \"./YoutubeApp\";\n\nexport default function App({ fileChangesURL, videoURL, gifURL, type, showFrameNumber, layout, videoId }) {\n  return {\n    codeAssistantYoutube: <YoutubeWithAssistantApp fileChangesURL={fileChangesURL} videoId={videoId} />,\n    youtube: <YoutubeApp videoId={videoId} />,\n    onSite: <OnSiteApp fileChangesURL={fileChangesURL} videoURL={videoURL} />,\n    gif: <GifApp gifUrl={gifURL} />,\n    codeAssistantGif: (\n      <GifWithAssistantApp\n        fileChangesURL={fileChangesURL}\n        gifUrl={gifURL}\n        showFrameNumber={showFrameNumber}\n        layout={layout}\n      />\n    ),\n  }[type];\n}\n\nexport function toExtension(fileName) {\n  const fName = fileName ? fileName.substr(fileName.lastIndexOf(\".\") + 1) : \"plaintext\";\n  return fName === \"txt\" ? \"plaintext\" : fName;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\n(function () {\n  const roots = document.getElementsByClassName(\"kodseged\");\n  if (!roots.length) {\n    return;\n  }\n\n  Array.from(roots).forEach((root) => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <App\n          fileChangesURL={root.dataset?.filechangesurl}\n          videoURL={root.dataset?.videourl}\n          videoId={root.dataset?.videoid}\n          type={root.dataset?.type}\n          gifURL={root.dataset?.gifurl}\n          showFrameNumber={Boolean(root.dataset?.showframenumber)}\n          layout={root.dataset?.layout}\n        />\n      </React.StrictMode>,\n      root\n    );\n  });\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})();\n"],"sourceRoot":""}