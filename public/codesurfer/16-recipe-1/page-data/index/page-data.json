{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","webpackCompilationHash":"3dedfda78883e1068cae","result":{"data":{"deck":{"id":"cddb46e4-4c42-5278-be9e-cd1a2636d829","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"import React from \\\"react\\\";\\nimport \\\"./App.css\\\";\\n\\nfunction App() {\\n  \\n}\\n\\nexport default App;\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nimport React from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { BrowserRouter as Router, NavLink } from \\\"react-router-dom\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <nav className=\\\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark mb-3\\\">\\n        <div className=\\\"\\\" id=\\\"navbarNav\\\">\\n          <ul className=\\\"navbar-nav\\\">\\n           \\n          </ul>\\n        </div>\\n      </nav>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nimport React from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { BrowserRouter as Router, NavLink } from \\\"react-router-dom\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <nav className=\\\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark mb-3\\\">\\n        <div className=\\\"\\\" id=\\\"navbarNav\\\">\\n          <ul className=\\\"navbar-nav\\\">\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link\\\">\\n                  <img width=\\\"60px\\\" src={process.env.PUBLIC_URL + \\\"/logo.png\\\"} alt=\\\"\\\" />\\n                </span>\\n              </NavLink>\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nimport React from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { BrowserRouter as Router, NavLink } from \\\"react-router-dom\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <nav className=\\\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark mb-3\\\">\\n        <div className=\\\"\\\" id=\\\"navbarNav\\\">\\n          <ul className=\\\"navbar-nav\\\">\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link\\\">\\n                  <img width=\\\"60px\\\" src={process.env.PUBLIC_URL + \\\"/logo.png\\\"} alt=\\\"\\\" />\\n                </span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/receptek`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link pt-4\\\">Receptek</span>\\n              </NavLink>\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nimport React from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { BrowserRouter as Router, NavLink } from \\\"react-router-dom\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <nav className=\\\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark mb-3\\\">\\n        <div className=\\\"\\\" id=\\\"navbarNav\\\">\\n          <ul className=\\\"navbar-nav\\\">\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link\\\">\\n                  <img width=\\\"60px\\\" src={process.env.PUBLIC_URL + \\\"/logo.png\\\"} alt=\\\"\\\" />\\n                </span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/receptek`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link pt-4\\\">Receptek</span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/uj-recept`} activeClassName=\\\"active\\\">\\n                <span className=\\\"nav-link pt-4\\\">\\xDAj recept</span>\\n              </NavLink>\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nimport React from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { BrowserRouter as Router, Switch, Route, NavLink, Redirect } from \\\"react-router-dom\\\";\\nimport { RecipeCreate } from \\\"./RecipeCreate\\\";\\nimport { RecipeEdit } from \\\"./RecipeEdit\\\";\\nimport { RecipeSingle } from \\\"./RecipeSingle\\\";\\nimport { RecipeList } from \\\"./RecipeList\\\";\\nimport { Home } from \\\"./Home\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <nav className=\\\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark mb-3\\\">\\n        <div className=\\\"\\\" id=\\\"navbarNav\\\">\\n          <ul className=\\\"navbar-nav\\\">\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link\\\">\\n                  <img width=\\\"60px\\\" src={process.env.PUBLIC_URL + \\\"/logo.png\\\"} alt=\\\"\\\" />\\n                </span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/receptek`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link pt-4\\\">Receptek</span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/uj-recept`} activeClassName=\\\"active\\\">\\n                <span className=\\\"nav-link pt-4\\\">\\xDAj recept</span>\\n              </NavLink>\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>\\n      <div className=\\\"container\\\" style={{ marginTop: \\\"140px\\\" }}>\\n        <Switch>\\n          <Route exact path=\\\"/\\\" component={Home} />\\n          <Route exact path=\\\"/receptek\\\" component={RecipeList} />\\n          <Route exact path=\\\"/uj-recept\\\" component={RecipeCreate} />\\n          <Route exact path=\\\"/recept-szerkesztes/:recipeSlug\\\" component={RecipeEdit} />\\n          <Route exact path=\\\"/recept/:recipeSlug\\\" component={RecipeSingle} />\\n          <Redirect to={\\\"/\\\"} />\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"39\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"39 title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Home.jsx\\\"\",\n    \"title\": \"\\\"Home.jsx\\\"\"\n  }), \"\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\nimport React, { useState } from \\\"react\\\";\\n\\nexport function Home() {\\n  \\n}\\n\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Home.jsx\\\"\",\n    \"title\": \"\\\"Home.jsx\\\"\"\n  }), \"\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\nimport React, { useState } from \\\"react\\\";\\n\\nexport function Home() {\\n  return (\\n    <div className=\\\"jumbotron\\\">\\n      <h1>\\xDCdv a recept appban</h1>\\n      <p>Jelenleg {numberOfRecipes} recept el\\xE9rhet\\u0151</p>\\n      \\n    </div>\\n  );\\n}\\n\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Home.jsx\\\"\",\n    \"title\": \"\\\"Home.jsx\\\"\"\n  }), \"\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\nimport React, { useState } from \\\"react\\\";\\n\\nexport function Home() {\\n  const [numberOfRecipes, setNumberOfRecipes] = useState();\\n  return (\\n    <div className=\\\"jumbotron\\\">\\n      <h1>\\xDCdv a recept appban</h1>\\n      <p>Jelenleg {numberOfRecipes} recept el\\xE9rhet\\u0151</p>\\n      \\n    </div>\\n  );\\n}\\n\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Home.jsx\\\"\",\n    \"title\": \"\\\"Home.jsx\\\"\"\n  }), \"\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200F\\u200F\\u200E\\nimport React, { useState, useEffect } from \\\"react\\\";\\n\\nexport function Home() {\\n  const [numberOfRecipes, setNumberOfRecipes] = useState();\\n\\n  useEffect(() => {\\n    fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then((recipes) => setNumberOfRecipes(recipes.length));\\n  }, []);\\n\\n  return (\\n    <div className=\\\"jumbotron\\\">\\n      <h1>\\xDCdv a recept appban</h1>\\n      <p>Jelenleg {numberOfRecipes} recept el\\xE9rhet\\u0151</p>\\n      \\n    </div>\\n  );\\n}\\n\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Home.jsx\\\"\",\n    \"title\": \"\\\"Home.jsx\\\"\"\n  }), \"\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200E\\u200F\\u200F\\u200E\\nimport React, { useState, useEffect } from \\\"react\\\";\\nimport { NavLink } from \\\"react-router-dom\\\";\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faArrowCircleRight } from \\\"@fortawesome/free-solid-svg-icons\\\";\\n\\nexport function Home() {\\n  const [numberOfRecipes, setNumberOfRecipes] = useState();\\n\\n  useEffect(() => {\\n    fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then((recipes) => setNumberOfRecipes(recipes.length));\\n  }, []);\\n\\n  return (\\n    <div className=\\\"jumbotron\\\">\\n      <h1>\\xDCdv a recept appban</h1>\\n      <p>Jelenleg {numberOfRecipes} recept el\\xE9rhet\\u0151</p>\\n      <NavLink to={`/receptek`} activeClassName=\\\"active\\\" exact>\\n        <button className=\\\"btn btn-primary\\\">\\n          Tov\\xE1bb <FontAwesomeIcon icon={faArrowCircleRight} />\\n        </button>\\n      </NavLink>\\n    </div>\\n  );\\n}\\n\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"Home.jsx\\\"\",\n    \"title\": \"\\\"Home.jsx\\\"\"\n  }), \"\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200E\\u200F\\u200F\\u200E\\nimport React, { useState, useEffect } from \\\"react\\\";\\nimport { NavLink } from \\\"react-router-dom\\\";\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faArrowCircleRight } from \\\"@fortawesome/free-solid-svg-icons\\\";\\n\\nexport function Home() {\\n  const [numberOfRecipes, setNumberOfRecipes] = useState();\\n\\n  useEffect(() => {\\n    fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then((recipes) => setNumberOfRecipes(recipes.length));\\n  }, []);\\n\\n  return (\\n    <div className=\\\"jumbotron\\\">\\n      <h1>\\xDCdv a recept appban</h1>\\n      <p>Jelenleg {numberOfRecipes} recept el\\xE9rhet\\u0151</p>\\n      <NavLink to={`/receptek`} activeClassName=\\\"active\\\" exact>\\n        <button className=\\\"btn btn-primary\\\">\\n          Tov\\xE1bb <FontAwesomeIcon icon={faArrowCircleRight} />\\n        </button>\\n      </NavLink>\\n    </div>\\n  );\\n}\\n\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E \\u200E \\u200E\\u200F\\u200F\\u200E\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\\nimport React from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { BrowserRouter as Router, Switch, Route, NavLink, Redirect } from \\\"react-router-dom\\\";\\nimport { RecipeCreate } from \\\"./RecipeCreate\\\";\\nimport { RecipeEdit } from \\\"./RecipeEdit\\\";\\nimport { RecipeSingle } from \\\"./RecipeSingle\\\";\\nimport { RecipeList } from \\\"./RecipeList\\\";\\nimport { Home } from \\\"./Home\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <nav className=\\\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark mb-3\\\">\\n        <div className=\\\"\\\" id=\\\"navbarNav\\\">\\n          <ul className=\\\"navbar-nav\\\">\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link\\\">\\n                  <img width=\\\"60px\\\" src={process.env.PUBLIC_URL + \\\"/logo.png\\\"} alt=\\\"\\\" />\\n                </span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/receptek`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link pt-4\\\">Receptek</span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/uj-recept`} activeClassName=\\\"active\\\">\\n                <span className=\\\"nav-link pt-4\\\">\\xDAj recept</span>\\n              </NavLink>\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>\\n      <div className=\\\"container\\\" style={{ marginTop: \\\"140px\\\" }}>\\n        <Switch>\\n          <Route exact path=\\\"/\\\" component={Home} />\\n          <Route exact path=\\\"/receptek\\\" component={RecipeList} />\\n          <Route exact path=\\\"/uj-recept\\\" component={RecipeCreate} />\\n          <Route exact path=\\\"/recept-szerkesztes/:recipeSlug\\\" component={RecipeEdit} />\\n          <Route exact path=\\\"/recept/:recipeSlug\\\" component={RecipeSingle} />\\n          <Redirect to={\\\"/\\\"} />\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"40\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"40 title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \"import React from \\\"react\\\";\\n\\nexport function RecipeList() {\\n\\n  return \\\"receptek list\\xE1ja\\\";\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \"import React, { useEffect, useState, Fragment } from \\\"react\\\";\\n\\nexport function RecipeList() {\\n  const [recipes, setRecipes] = useState([]);\\n  const [isPending, setPending] = useState([]);\\n\\n  return \\\"receptek list\\xE1ja\\\";\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \" \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\nimport React, { useEffect, useState, Fragment } from \\\"react\\\";\\n\\nexport function RecipeList() {\\n  const [recipes, setRecipes] = useState([]);\\n  const [isPending, setPending] = useState([]);\\n\\n  function fetchRecipes() {\\n    return fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then(setRecipes);\\n  }\\n\\n  useEffect(() => {\\n    setPending(true);\\n    fetchRecipes().finally(() => {\\n      setPending(false);\\n    });\\n  }, []);\\n}\\n  return \\\"receptek list\\xE1ja\\\";\\n \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \" \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\nimport React, { useEffect, useState, Fragment } from \\\"react\\\";\\n\\nexport function RecipeList() {\\n  const [recipes, setRecipes] = useState([]);\\n  const [isPending, setPending] = useState([]);\\n\\n  function fetchRecipes() {\\n    return fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then(setRecipes);\\n  }\\n\\n  useEffect(() => {\\n    setPending(true);\\n    fetchRecipes().finally(() => {\\n      setPending(false);\\n    });\\n  }, []);\\n\\n  if (isPending) {\\n    return <Spinner />;\\n  }\\n}\\n \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \" \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\nimport React, { useEffect, useState, Fragment } from \\\"react\\\";\\n\\nexport function RecipeList() {\\n  const [recipes, setRecipes] = useState([]);\\n  const [isPending, setPending] = useState([]);\\n\\n  function fetchRecipes() {\\n    return fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then(setRecipes);\\n  }\\n\\n  useEffect(() => {\\n    setPending(true);\\n    fetchRecipes().finally(() => {\\n      setPending(false);\\n    });\\n  }, []);\\n\\n  if (isPending) {\\n    return <Spinner />;\\n  }\\n\\n  return (\\n    <Fragment>\\n      {alignToRows(recipes).map((row, i) => (\\n        <div className=\\\"row mb-3\\\" key={i}>\\n          {row.map((recipe) => (\\n            <div className=\\\"col-md-4\\\" key={recipe.id}>\\n              <div className=\\\"card w-100 h-100\\\">\\n                \\n              </div>\\n            </div>\\n          ))}\\n        </div>\\n      ))}\\n    </Fragment>\\n  );\\n}\\n\\nconst alignToRows = (items) =>\\n  items.slice().reduceRight((acc, curr, i, arr) => {\\n    acc.push(arr.splice(0, 3));\\n    return acc;\\n  }, []);\\n \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const alignToRows = (items) =>\\n  items.slice().reduceRight((acc, curr, i, arr) => {\\n    acc.push(arr.splice(0, 3));\\n    return acc;\\n  }, []);\\n\\nconst items = [1, 2, 3, 4, 5, 6, 7];\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const alignToRows = (items) =>\\n  items.slice().reduceRight((acc, curr, i, arr) => {\\n    acc.push(arr.splice(0, 3));\\n    return acc;\\n  }, []);\\n\\nconst items = [1, 2, 3, 4, 5, 6, 7];\\n\\nconsole.log(alignToRows(items));\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const alignToRows = (items) =>\\n  items.slice().reduceRight((acc, curr, i, arr) => {\\n    acc.push(arr.splice(0, 3));\\n    return acc;\\n  }, []);\\n\\nconst items = [1, 2, 3, 4, 5, 6, 7];\\n\\nconsole.log(alignToRows(items));\\n\\n// V\\xE9geredm\\xE9ny:\\n  [\\n    [1, 2, 3], \\n    [4, 5, 6], \\n    [7]\\n  ]\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \" \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\nimport React, { useEffect, useState, Fragment } from \\\"react\\\";\\n\\nexport function RecipeList() {\\n  const [recipes, setRecipes] = useState([]);\\n  const [isPending, setPending] = useState([]);\\n\\n  function fetchRecipes() {\\n    return fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then(setRecipes);\\n  }\\n\\n  useEffect(() => {\\n    setPending(true);\\n    fetchRecipes().finally(() => {\\n      setPending(false);\\n    });\\n  }, []);\\n\\n  if (isPending) {\\n    return <Spinner />;\\n  }\\n\\n  return (\\n    <Fragment>\\n      {alignToRows(recipes).map((row, i) => (\\n        <div className=\\\"row mb-3\\\" key={i}>\\n          {row.map((recipe) => (\\n            <div className=\\\"col-md-4\\\" key={recipe.id}>\\n\\n            </div>\\n          ))}\\n        </div>\\n      ))}\\n    </Fragment>\\n  );\\n}\\n\\nconst alignToRows = (items) =>\\n  items.slice().reduceRight((acc, curr, i, arr) => {\\n    acc.push(arr.splice(0, 3));\\n    return acc;\\n  }, []);\\n \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \" \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\nimport React, { useEffect, useState, Fragment } from \\\"react\\\";\\n\\nexport function RecipeList() {\\n  const [recipes, setRecipes] = useState([]);\\n  const [isPending, setPending] = useState([]);\\n\\n  function fetchRecipes() {\\n    return fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then(setRecipes);\\n  }\\n\\n  useEffect(() => {\\n    setPending(true);\\n    fetchRecipes().finally(() => {\\n      setPending(false);\\n    });\\n  }, []);\\n\\n  if (isPending) {\\n    return <Spinner />;\\n  }\\n\\n  return (\\n    <Fragment>\\n      {alignToRows(recipes).map((row, i) => (\\n        <div className=\\\"row mb-3\\\" key={i}>\\n          {row.map((recipe) => (\\n            <div className=\\\"col-md-4\\\" key={recipe.id}>\\n              <div className=\\\"card w-100 h-100\\\">\\n                <img\\n                  className=\\\"card-img-top mb-2]\\\"\\n                  src={`${process.env.REACT_APP_BACKEND_URL}/public/${recipe.imageURL}`}\\n                />\\n                <div className=\\\"card-body\\\">\\n                  <h5 className=\\\"card-title\\\">{recipe.name}</h5>\\n                </div>\\n              </div>\\n            </div>\\n          ))}\\n        </div>\\n      ))}\\n    </Fragment>\\n  );\\n}\\n\\nconst alignToRows = (items) =>\\n  items.slice().reduceRight((acc, curr, i, arr) => {\\n    acc.push(arr.splice(0, 3));\\n    return acc;\\n  }, []);\\n \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \" \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\nexport function RecipeList() {\\n  const [recipes, setRecipes] = useState([]);\\n  const [isPending, setPending] = useState([]);\\n\\n  function fetchRecipes() {\\n    return fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then(setRecipes);\\n  }\\n\\n  useEffect(() => {\\n    setPending(true);\\n    fetchRecipes().finally(() => {\\n      setPending(false);\\n    });\\n  }, []);\\n\\n  if (isPending) {\\n    return <Spinner />;\\n  }\\n\\n  return (\\n    <Fragment>\\n      {alignToRows(recipes).map((row, i) => (\\n        <div className=\\\"row mb-3\\\" key={i}>\\n          {row.map((recipe) => (\\n            <div className=\\\"col-md-4\\\" key={recipe.id}>\\n              <div className=\\\"card w-100 h-100\\\">\\n                <img\\n                  className=\\\"card-img-top mb-2]\\\"\\n                  src={`${process.env.REACT_APP_BACKEND_URL}/public/${recipe.imageURL}`}\\n                />\\n                <div className=\\\"card-body\\\">\\n                  <h5 className=\\\"card-title\\\">{recipe.name}</h5>\\n                </div>\\n                <div className=\\\"w-75 p-3\\\">\\n                  <NavLink to={`/recept-szerkesztes/${recipe.slug}`}>\\n                    <button className=\\\"btn btn-sm btn-outline-warning mr-2\\\">\\n                      <FontAwesomeIcon icon={faPencilAlt} />\\n                    </button>\\n                  </NavLink>                      \\n                  <NavLink to={`/recept/${recipe.slug}`}>\\n                    <button className=\\\"btn btn-sm btn-outline-primary\\\">\\n                      <FontAwesomeIcon icon={faEye} />\\n                    </button>\\n                  </NavLink>\\n                </div>\\n              </div>\\n            </div>\\n          ))}\\n        </div>\\n      ))}\\n    </Fragment>\\n  );\\n}\\n\\nconst alignToRows = (items) =>\\n  items.slice().reduceRight((acc, curr, i, arr) => {\\n    acc.push(arr.splice(0, 3));\\n    return acc;\\n  }, []);\\n \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeList.jsx\\\"\",\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \" \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\nimport React, { useEffect, useState } from \\\"react\\\";\\nimport { NavLink } from \\\"react-router-dom\\\";\\nimport \\\"./App.css\\\";\\nimport { FontAwesomeIcon } from \\\"@fortawesome/react-fontawesome\\\";\\nimport { faEye, faPencilAlt, faTimes } from \\\"@fortawesome/free-solid-svg-icons\\\";\\nimport { Spinner } from \\\"./Spinner\\\";\\n\\nexport function RecipeList() {\\n  const [recipes, setRecipes] = useState([]);\\n  const [isPending, setPending] = useState([]);\\n\\n  function fetchRecipes() {\\n    return fetch(process.env.REACT_APP_BACKEND_URL + \\\"/recipes\\\")\\n      .then((res) => res.json())\\n      .then(setRecipes);\\n  }\\n\\n  useEffect(() => {\\n    setPending(true);\\n    fetchRecipes().finally(() => {\\n      setPending(false);\\n    });\\n  }, []);\\n\\n  if (isPending) {\\n    return <Spinner />;\\n  }\\n\\n  return (\\n    <Fragment>\\n      {alignToRows(recipes).map((row, i) => (\\n        <div className=\\\"row mb-3\\\" key={i}>\\n          {row.map((recipe) => (\\n            <div className=\\\"col-md-4\\\" key={recipe.id}>\\n              <div className=\\\"card w-100 h-100\\\">\\n                <img\\n                  className=\\\"card-img-top mb-2]\\\"\\n                  src={`${process.env.REACT_APP_BACKEND_URL}/public/${recipe.imageURL}`}\\n                />\\n                <div className=\\\"card-body\\\">\\n                  <h5 className=\\\"card-title\\\">{recipe.name}</h5>\\n                </div>\\n                <div className=\\\"w-75 p-3\\\">\\n                  <NavLink to={`/recept-szerkesztes/${recipe.slug}`}>\\n                    <button className=\\\"btn btn-sm btn-outline-warning mr-2\\\">\\n                      <FontAwesomeIcon icon={faPencilAlt} />\\n                    </button>\\n                  </NavLink>                      \\n                  <NavLink to={`/recept/${recipe.slug}`}>\\n                    <button className=\\\"btn btn-sm btn-outline-primary\\\">\\n                      <FontAwesomeIcon icon={faEye} />\\n                    </button>\\n                  </NavLink>\\n                </div>\\n              </div>\\n            </div>\\n          ))}\\n        </div>\\n      ))}\\n    </Fragment>\\n  );\\n}\\n\\nconst alignToRows = (items) =>\\n  items.slice().reduceRight((acc, curr, i, arr) => {\\n    acc.push(arr.splice(0, 3));\\n    return acc;\\n  }, []);\\n \\u200E\\u200F\\u200F\\u200E\\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"25:69 title=\\\"RecipeList.jsx\\\"\",\n    \"25:69\": true,\n    \"title\": \"\\\"RecipeList.jsx\\\"\"\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\\nimport React from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport { BrowserRouter as Router, Switch, Route, NavLink, Redirect } from \\\"react-router-dom\\\";\\nimport { RecipeCreate } from \\\"./RecipeCreate\\\";\\nimport { RecipeEdit } from \\\"./RecipeEdit\\\";\\nimport { RecipeSingle } from \\\"./RecipeSingle\\\";\\nimport { RecipeList } from \\\"./RecipeList\\\";\\nimport { Home } from \\\"./Home\\\";\\n\\nfunction App() {\\n  return (\\n    <Router>\\n      <nav className=\\\"navbar fixed-top navbar-expand-sm navbar-dark bg-dark mb-3\\\">\\n        <div className=\\\"\\\" id=\\\"navbarNav\\\">\\n          <ul className=\\\"navbar-nav\\\">\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link\\\">\\n                  <img width=\\\"60px\\\" src={process.env.PUBLIC_URL + \\\"/logo.png\\\"} alt=\\\"\\\" />\\n                </span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/receptek`} activeClassName=\\\"active\\\" exact>\\n                <span className=\\\"nav-link pt-4\\\">Receptek</span>\\n              </NavLink>\\n            </li>\\n            <li className=\\\"nav-item\\\">\\n              <NavLink to={`/uj-recept`} activeClassName=\\\"active\\\">\\n                <span className=\\\"nav-link pt-4\\\">\\xDAj recept</span>\\n              </NavLink>\\n            </li>\\n          </ul>\\n        </div>\\n      </nav>\\n      <div className=\\\"container\\\" style={{ marginTop: \\\"140px\\\" }}>\\n        <Switch>\\n          <Route exact path=\\\"/\\\" component={Home} />\\n          <Route exact path=\\\"/receptek\\\" component={RecipeList} />\\n          <Route exact path=\\\"/uj-recept\\\" component={RecipeCreate} />\\n          <Route exact path=\\\"/recept-szerkesztes/:recipeSlug\\\" component={RecipeEdit} />\\n          <Route exact path=\\\"/recept/:recipeSlug\\\" component={RecipeSingle} />\\n          <Redirect to={\\\"/\\\"} />\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"41\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"41 title=\\\"App.jsx\\\"\",\n    \"title\": \"\\\"App.jsx\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n\\n  return \\\"Recept l\\xE9trehoz\\xF3 form\\\";\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n\\n  return \\\"Recept l\\xE9trehoz\\xF3 form\\\";\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form>\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          \\n          <div className=\\\"row w-100\\\">\\n            <div className=\\\"col-md-3 offset-md-9\\\">\\n              <button\\n                type=\\\"button\\\"\\n                className=\\\"btn btn-success btn-sm float-right\\\"\\n                onClick={() => {\\n                  setIngredientIds((prev) => [...prev, uuidv4()]);\\n                }}\\n              >\\n                <FontAwesomeIcon icon={faPlus} />\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form>\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          {ingredientIds.map((ingredientId, i) => (\\n            <div key={ingredientId} className=\\\"col-sm-10 offset-2\\\">\\n              <div className={\\\"row mb-3 \\\" + (i === ingredientIds.length - 1 ? \\\"\\\" : \\\"border-bottom\\\")}>\\n                <div className=\\\"col-md-6\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    name={[\\\"ingredient-name-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                    placeholder=\\\"N\\xE9v\\\"\\n                  />\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    name={[\\\"ingredient-quantity-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                    placeholder=\\\"Mennyis\\xE9g\\\"\\n                  />\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  <select\\n                    defaultValue=\\\"\\\"\\n                    name={[\\\"ingredient-type-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled>\\n                      T\\xEDpus\\n                    </option>\\n                    <option value=\\\"meat\\\">H\\xFAs</option>                \\n                    <option value=\\\"drink\\\">Ital</option>\\n                    <option value=\\\"dairy\\\">Tejterm\\xE9k</option>\\n                    <option value=\\\"fruit\\\">Gy\\xFCm\\xF6lcs</option>\\n                    <option value=\\\"spice\\\">F\\u0171szer</option>\\n                    <option value=\\\"other\\\">Egy\\xE9b</option>\\n                  </select>\\n                </div>\\n                <div className=\\\"col-md-2\\\">                \\n                </div>\\n              </div>\\n            </div>\\n          ))}\\n          <div className=\\\"row w-100\\\">\\n            <div className=\\\"col-md-3 offset-md-9\\\">\\n              <button\\n                type=\\\"button\\\"\\n                className=\\\"btn btn-success btn-sm float-right\\\"\\n                onClick={() => {\\n                  setIngredientIds((prev) => [...prev, uuidv4()]);\\n                }}\\n              >\\n                <FontAwesomeIcon icon={faPlus} />\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"59\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"59 title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3 title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"12:46 title=\\\"RecipeCreate.jsx\\\"\",\n    \"12:46\": true,\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form>\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          {ingredientIds.map((ingredientId, i) => (\\n            <div key={ingredientId} className=\\\"col-sm-10 offset-2\\\">\\n              <div className={\\\"row mb-3 \\\" + (i === ingredientIds.length - 1 ? \\\"\\\" : \\\"border-bottom\\\")}>\\n                <div className=\\\"col-md-6\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    name={[\\\"ingredient-name-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                    placeholder=\\\"N\\xE9v\\\"\\n                  />\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    name={[\\\"ingredient-quantity-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                    placeholder=\\\"Mennyis\\xE9g\\\"\\n                  />\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  <select\\n                    defaultValue=\\\"\\\"\\n                    name={[\\\"ingredient-type-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled>\\n                      T\\xEDpus\\n                    </option>\\n                    <option value=\\\"meat\\\">H\\xFAs</option>                \\n                    <option value=\\\"drink\\\">Ital</option>\\n                    <option value=\\\"dairy\\\">Tejterm\\xE9k</option>\\n                    <option value=\\\"fruit\\\">Gy\\xFCm\\xF6lcs</option>\\n                    <option value=\\\"spice\\\">F\\u0171szer</option>\\n                    <option value=\\\"other\\\">Egy\\xE9b</option>\\n                  </select>\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  {i !== 0 ? (\\n                    <div className=\\\"w-100\\\">\\n                      <button\\n                        className=\\\"btn btn-danger mb-3\\\"\\n                        type=\\\"button\\\"\\n                        onClick={() => {\\n                          setIngredientIds((prevIds) => {\\n                            const ret = [...prevIds];\\n                            ret.splice(\\n                              prevIds.findIndex((id) => id === ingredientId),\\n                              1\\n                            );\\n                            return ret;\\n                          });\\n                        }}\\n                      >\\n                        <FontAwesomeIcon icon={faTrash} />\\n                      </button>\\n                    </div>\\n                  ) : (\\n                    \\\"\\\"\\n                  )}\\n                </div>\\n              </div>\\n            </div>\\n          ))}\\n          <div className=\\\"row w-100\\\">\\n            <div className=\\\"col-md-3 offset-md-9\\\">\\n              <button\\n                type=\\\"button\\\"\\n                className=\\\"btn btn-success btn-sm float-right\\\"\\n                onClick={() => {\\n                  setIngredientIds((prev) => [...prev, uuidv4()]);\\n                }}\\n              >\\n                <FontAwesomeIcon icon={faPlus} />\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"12:66 title=\\\"RecipeCreate.jsx\\\"\",\n    \"12:66\": true,\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form\\n        onSubmit={async (e) => {\\n          e.preventDefault();\\n\\n          console.log(e.target.elements);\\n        }}\\n      >\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          {ingredientIds.map((ingredientId, i) => (\\n            <div key={ingredientId} className=\\\"col-sm-10 offset-2\\\">\\n              <div className={\\\"row mb-3 \\\" + (i === ingredientIds.length - 1 ? \\\"\\\" : \\\"border-bottom\\\")}>\\n                <div className=\\\"col-md-6\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    name={[\\\"ingredient-name-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                    placeholder=\\\"N\\xE9v\\\"\\n                  />\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    name={[\\\"ingredient-quantity-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                    placeholder=\\\"Mennyis\\xE9g\\\"\\n                  />\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  <select\\n                    defaultValue=\\\"\\\"\\n                    name={[\\\"ingredient-type-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                  >\\n                    <option value=\\\"\\\" disabled>\\n                      T\\xEDpus\\n                    </option>\\n                    <option value=\\\"meat\\\">H\\xFAs</option>                \\n                    <option value=\\\"drink\\\">Ital</option>\\n                    <option value=\\\"dairy\\\">Tejterm\\xE9k</option>\\n                    <option value=\\\"fruit\\\">Gy\\xFCm\\xF6lcs</option>\\n                    <option value=\\\"spice\\\">F\\u0171szer</option>\\n                    <option value=\\\"other\\\">Egy\\xE9b</option>\\n                  </select>\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  {i !== 0 ? (\\n                    <div className=\\\"w-100\\\">\\n                      <button\\n                        className=\\\"btn btn-danger mb-3\\\"\\n                        type=\\\"button\\\"\\n                        onClick={() => {\\n                          setIngredientIds((prevIds) => {\\n                            const ret = [...prevIds];\\n                            ret.splice(\\n                              prevIds.findIndex((id) => id === ingredientId),\\n                              1\\n                            );\\n                            return ret;\\n                          });\\n                        }}\\n                      >\\n                        <FontAwesomeIcon icon={faTrash} />\\n                      </button>\\n                    </div>\\n                  ) : (\\n                    \\\"\\\"\\n                  )}\\n                </div>\\n              </div>\\n            </div>\\n          ))}\\n          <div className=\\\"row w-100\\\">\\n            <div className=\\\"col-md-3 offset-md-9\\\">\\n              <button\\n                type=\\\"button\\\"\\n                className=\\\"btn btn-success btn-sm float-right\\\"\\n                onClick={() => {\\n                  setIngredientIds((prev) => [...prev, uuidv4()]);\\n                }}\\n              >\\n                <FontAwesomeIcon icon={faPlus} />\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form\\n        onSubmit={async (e) => {\\n          e.preventDefault();\\n\\n          console.log(e.target.elements);\\n        }}\\n      >\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          // Hozz\\xE1val\\xF3k...\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n  const [stepIds, setStepIds] = useState([uuidv4()]);\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form\\n        onSubmit={async (e) => {\\n          e.preventDefault();\\n\\n          console.log(e.target.elements);\\n        }}\\n      >\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          // Hozz\\xE1val\\xF3k...\\n        </div>\\n\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">L\\xE9p\\xE9sek:</label>\\n          // L\\xE9p\\xE9sek...\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n  const [stepIds, setStepIds] = useState([uuidv4()]);\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form\\n        onSubmit={async (e) => {\\n          e.preventDefault();\\n\\n          console.log(e.target.elements);\\n        }}\\n      >\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          // Hozz\\xE1val\\xF3k...\\n        </div>\\n\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">L\\xE9p\\xE9sek:</label>\\n          {stepIds.map((stepId, i) => (\\n            <div key={stepId} className=\\\"col-sm-10 offset-2\\\">\\n              <div className={\\\"row mb-3 \\\" + (i === stepIds.length - 1 ? \\\"\\\" : \\\"border-bottom\\\")}>\\n                <div className=\\\"col-md-6\\\">\\n                  <input\\n                    type=\\\"text\\\"\\n                    name={[\\\"step-content-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                    placeholder={i + 1 + \\\". l\\xE9p\\xE9s\\\"}\\n                  />\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  <input\\n                    type=\\\"number\\\"\\n                    name={[\\\"step-timer-\\\" + i}\\n                    className=\\\"form-control d-inline-block mr-2 mb-2]\\\"\\n                    placeholder=[\\\"id\\u0151\\\"\\n                    min={1}\\n                  />\\n                </div>\\n                <div className=\\\"col-md-2\\\">\\n                  {i === 0 ? (\\n                    \\\"\\\"\\n                  ) : (\\n                    <div className=\\\"w-100\\\">\\n                      <button\\n                        className=\\\"btn btn-danger mb-3\\\"\\n                        type=\\\"button\\\"\\n                        onClick={() => {\\n                          setStepIds((prevIds) => {\\n                            const ret = [...prevIds];\\n                            ret.splice(\\n                              prevIds.findIndex((id) => id === stepId),\\n                              1\\n                            );\\n                            return ret;\\n                          });\\n                        }}\\n                      >\\n                        <FontAwesomeIcon icon={faTrash} />\\n                      </button>\\n                    </div>\\n                  )}\\n                </div>\\n              </div>\\n            </div>\\n          ))}\\n          <div className=\\\"row w-100\\\">\\n            <div className=\\\"col-md-3 offset-md-9\\\">\\n              <button\\n                type=\\\"button\\\"\\n                className=\\\"btn btn-success btn-sm float-right\\\"\\n                onClick={() => {\\n                  setStepIds((prev) => [...prev, uuidv4()]);\\n                }}\\n              >\\n                <FontAwesomeIcon icon={faPlus} />\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n  const [stepIds, setStepIds] = useState([uuidv4()]);\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form\\n        onSubmit={async (e) => {\\n          e.preventDefault();\\n\\n          console.log(e.target.elements);\\n        }}\\n      >\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          // Hozz\\xE1val\\xF3k...\\n        </div>\\n\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">L\\xE9p\\xE9sek:</label>\\n          // L\\xE9p\\xE9sek...\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function RecipeCreate() {\\n  const [ingredientIds, setIngredientIds] = useState( [ uuidv4() ] );\\n  const [stepIds, setStepIds] = useState([uuidv4()]);\\n\\n  return (\\n    <div className=\\\"card p-3\\\">\\n      <h1>\\xDAj recept:</h1>\\n      <hr />\\n      <form\\n        onSubmit={async (e) => {\\n          e.preventDefault();\\n\\n          console.log(e.target.elements);\\n        }}\\n      >\\n        <div className=\\\"form-group row pb-3 border-bottom\\\"> \\u200E\\n          <label className=\\\"col-sm-2 col-form-label\\\">N\\xE9v:</label>\\n          <div className=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" name=\\\"name\\\" className=\\\"form-control\\\" />\\n          </div>\\n        </div>\\n\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">Hozz\\xE1val\\xF3k:</label>\\n          // Hozz\\xE1val\\xF3k...\\n        </div>\\n\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">L\\xE9p\\xE9sek:</label>\\n          // L\\xE9p\\xE9sek...\\n        </div>\\n\\n        <div className=\\\"form-group row pb-3 border-bottom\\\">\\n          <label className=\\\"col-sm-2 col-form-label\\\">K\\xE9p:</label>\\n          <div className=\\\"col-md-6 offset-md-1\\\">\\n            <input type=\\\"file\\\" name=\\\"img-url\\\" className=\\\"form-control\\\" />\\n          </div>\\n        </div>\\n        \\n        <button type=[\\\"submit\\\" className=\\\"btn btn-success btn-sm\\\">\\n          K\\xFCld\\xE9s <FontAwesomeIcon icon={faCheckCircle} />\\n        </button>\\n      </form>\\n    </div>\\n  );\\n}\\n\\nexport function uuidv4() {\\n  return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, function (c) {\\n    var r = (Math.random() * 16) | 0,\\n      v = c == \\\"x\\\" ? r : (r & 0x3) | 0x8;\\n    return v.toString(16);\\n  });\\n}\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"HTMLFormControlsCollection\\xA0[\\n  \\\"ingredient-name-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-name-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-name-2\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-2\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-0\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-1\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-2\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-content-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-content-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-timer-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-timer-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n]\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\u200E \\u200E\\nHTMLFormControlsCollection\\xA0[\\n  \\\"ingredient-name-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-name-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-name-2\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-2\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-0\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-1\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-2\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-content-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-content-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-timer-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-timer-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n]\\n\\n\\u27F9\\n\\n{\\n  ingredients: [\\n    {\\n    name: \\\"\\xE9leszt\\u0151\\\"\\n    quantity: \\\"5 te\\xE1skan\\xE1l\\\"\\n    type: \\\"other\\\"\\n    },\\n    {\\n      name: \\\"s\\xF3\\\"\\n      quantity: \\\"2 te\\xE1skan\\xE1l\\\"\\n      type: \\\"spice\\\"\\n    },\\n    {\\n      name: \\\"mozzarella sajt\\\"\\n      quantity: \\\"3/4 cs\\xE9sze\\\"\\n      type: \\\"dairy\\\"\\n    }\\n  ],\\n  steps: [\\n    {\\n      content: \\\"Meleg\\xEDts\\xFCk a s\\xFCt\\u0151t 400 \\xB0C-ra.\\\"\\n      timer: \\\"4\\\"\\n    },\\n    {\\n      content: \\\"Adjunk forr\\xF3 vizet az \\xE9leszt\\u0151h\\xF6z \\xE9s hagyjuk \\xFClni 15 percig.\\\"\\n      timer: \\\"15\\\"\\n    },\\n  ]\\n}\\n \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"1:20\",\n    \"1:20\": true\n  }), \" \\u200E\\nHTMLFormControlsCollection\\xA0[\\n  \\\"ingredient-name-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-name-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-name-2\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-2\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-0\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-1\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-2\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-content-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-content-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-timer-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-timer-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n]\\n \\u200E \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"1. Szétválasztás\\\"\",\n    \"title\": \"\\\"1.\",\n    \"Szétválasztás\\\"\": true\n  }), \" \\u200E \\u200E \\u200E \\n    Object.entries(elements)\\n\\nHTMLFormControlsCollection\\xA0[\\n  \\\"ingredient-name-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-name-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-name-2\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-quantity-2\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-0\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-1\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"ingredient-type-2\\\": select.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-content-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-content-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-timer-0\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n  \\\"step-timer-1\\\": input.form-control.d-inline-block.mr-2.mb-2,\\n]\\n \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"1. Szétválasztás\\\"\",\n    \"title\": \"\\\"1.\",\n    \"Szétválasztás\\\"\": true\n  }), \" \\u200E \\u200E \\u200E \\u200E\\n    Object.entries(elements)\\n\\n// Kimenet:\\n[\\n  [\\\"ingredient-name-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-name-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-name-2\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-quantity-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-quantity-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-quantity-2\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-type-0\\\", select.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-type-1\\\", select.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-type-2\\\", select.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-content-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-content-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-timer-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-timer-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n]\\n \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"2. Szűrés\\\"\",\n    \"title\": \"\\\"2.\",\n    \"Szűrés\\\"\": true\n  }), \" \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === \\\"step\\\";\\n      })\\n\\n// Kimenet:\\n[\\n  [\\\"ingredient-name-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-name-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-name-2\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-quantity-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-quantity-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-quantity-2\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-type-0\\\", select.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-type-1\\\", select.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"ingredient-type-2\\\", select.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-content-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-content-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-timer-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-timer-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n]\\n \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"2. Szűrés\\\"\",\n    \"title\": \"\\\"2.\",\n    \"Szűrés\\\"\": true\n  }), \" \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E\\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === \\\"step\\\";\\n      })\\n\\n// Kimenet:\\n[\\n  [\\\"step-content-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-content-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-timer-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-timer-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n]\\n \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"3. Aggregálás\\\"\",\n    \"title\": \"\\\"3.\",\n    \"Aggregálás\\\"\": true\n  }), \" \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E  \\u200E \\u200E \\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === \\\"step\\\";\\n      })\\n      .reduce((acc, [kulcs, ertek]) => {\\n        const [_, name, index] = kulcs.split(\\\"-\\\");\\n        return {\\n          ...acc,\\n          [index]: acc[index]\\n            ? {\\n                ...acc[index],\\n                [name]: ertek.value,\\n              }\\n            : { [name]: ertek.value },\\n        };\\n      }, {})\\n\\n// Kimenet:\\n[\\n  [\\\"step-content-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-content-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-timer-0\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n  [\\\"step-timer-1\\\", input.form-control.d-inline-block.mr-2.mb-2],\\n]\\n \\u200E \\u200E \\u200E \\u200E  \\u200E \\u200E \\u200E \\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"3. Aggregálás\\\"\",\n    \"title\": \"\\\"3.\",\n    \"Aggregálás\\\"\": true\n  }), \" \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E  \\u200E \\u200E \\u200E\\u200E\\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === \\\"step\\\";\\n      })\\n      .reduce((acc, [kulcs, ertek]) => {\\n        const [_, name, index] = kulcs.split(\\\"-\\\");\\n        return {\\n          ...acc,\\n          [index]: acc[index]\\n            ? {\\n                ...acc[index],\\n                [name]: ertek.value,\\n              }\\n            : { [name]: ertek.value },\\n        };\\n      }, {})\\n\\n// Kimenet:\\u200E \\u200E\\n{\\n  \\\"0\\\": {\\n    content: \\\"Meleg\\xEDts\\xFCk a s\\xFCt\\u0151t 400 \\xB0C-ra.\\\"\\n    timer: \\\"4\\\"\\n  },\\n  \\\"1\\\" : {\\n    content: \\\"Adjunk forr\\xF3 vizet az \\xE9leszt\\u0151h\\xF6z \\xE9s hagyjuk \\xFClni 15 percig.\\\"\\n    timer: \\\"15\\\"\\n  }\\n}\\n \\u200E \\u200E \\u200E \\u200E  \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"4. Összeillesztés\\\"\",\n    \"title\": \"\\\"4.\",\n    \"Összeillesztés\\\"\": true\n  }), \" \\u200E \\u200E\\n  Object.values(\\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === \\\"step\\\";\\n      })\\n      .reduce((acc, [kulcs, ertek]) => {\\n        const [_, name, index] = kulcs.split(\\\"-\\\");\\n        return {\\n          ...acc,\\n          [index]: acc[index]\\n            ? {\\n                ...acc[index],\\n                [name]: ertek.value,\\n              }\\n            : { [name]: ertek.value },\\n        };\\n      }, {})\\n  );\\n\\n// Kimenet:\\u200E \\u200E\\n{\\n  \\\"0\\\": {\\n    content: \\\"Meleg\\xEDts\\xFCk a s\\xFCt\\u0151t 400 \\xB0C-ra.\\\"\\n    timer: \\\"4\\\"\\n  },\\n  \\\"1\\\" : {\\n    content: \\\"Adjunk forr\\xF3 vizet az \\xE9leszt\\u0151h\\xF6z \\xE9s hagyjuk \\xFClni 15 percig.\\\"\\n    timer: \\\"15\\\"\\n  }\\n}\\n \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"4. Összeillesztés\\\"\",\n    \"title\": \"\\\"4.\",\n    \"Összeillesztés\\\"\": true\n  }), \" \\u200E \\u200E \\u200E \\u200E \\u200E\\n  Object.values(\\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === \\\"step\\\";\\n      })\\n      .reduce((acc, [kulcs, ertek]) => {\\n        const [_, name, index] = kulcs.split(\\\"-\\\");\\n        return {\\n          ...acc,\\n          [index]: acc[index]\\n            ? {\\n                ...acc[index],\\n                [name]: ertek.value,\\n              }\\n            : { [name]: ertek.value },\\n        };\\n      }, {})\\n  );\\n\\n// Kimenet:\\n[\\n    {\\n      content: \\\"Meleg\\xEDts\\xFCk a s\\xFCt\\u0151t 400 \\xB0C-ra.\\\"\\n      timer: \\\"4\\\"\\n    },\\n    {\\n      content: \\\"Adjunk forr\\xF3 vizet az \\xE9leszt\\u0151h\\xF6z \\xE9s hagyjuk \\xFClni 15 percig.\\\"\\n      timer: \\\"15\\\"\\n    }\\n]\\n \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"5. Általánosítás\\\"\",\n    \"title\": \"\\\"5.\",\n    \"Általánosítás\\\"\": true\n  }), \" \\u200E \\u200E\\nexport function transformToStructure(elements, type) {\\n  return Object.values(\\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === type;\\n      })\\n      .reduce((acc, [kulcs, ertek]) => {\\n        const [_, name, index] = kulcs.split(\\\"-\\\");\\n        return {\\n          ...acc,\\n          [index]: acc[index]\\n            ? {\\n                ...acc[index],\\n                [name]: ertek.value,\\n              }\\n            : { [name]: ertek.value },\\n        };\\n      }, {})\\n  );\\n}\\n\\n// Kimenet:\\n[\\n    {\\n      content: \\\"Meleg\\xEDts\\xFCk a s\\xFCt\\u0151t 400 \\xB0C-ra.\\\"\\n      timer: \\\"4\\\"\\n    },\\n    {\\n      content: \\\"Adjunk forr\\xF3 vizet az \\xE9leszt\\u0151h\\xF6z \\xE9s hagyjuk \\xFClni 15 percig.\\\"\\n      timer: \\\"15\\\"\\n    }\\n]\\n \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"5. Általánosítás\\\"\",\n    \"title\": \"\\\"5.\",\n    \"Általánosítás\\\"\": true\n  }), \" \\u200E \\nexport function transformToStructure(elements, type) {\\n  return Object.values(\\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === type;\\n      })\\n      .reduce((acc, [kulcs, ertek]) => {\\n        const [_, name, index] = kulcs.split(\\\"-\\\");\\n        return {\\n          ...acc,\\n          [index]: acc[index]\\n            ? {\\n                ...acc[index],\\n                [name]: ertek.value,\\n              }\\n            : { [name]: ertek.value },\\n        };\\n      }, {})\\n  );\\n}\\n\\n{\\n  ingredients: transformToStructure(e.target.elements, \\\"ingredient\\\"),\\n  steps: transformToStructure(e.target.elements, \\\"step\\\") \\n}\\n \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=\\\"RecipeCreate.jsx\\\"\",\n    \"title\": \"\\\"RecipeCreate.jsx\\\"\"\n  }), \"\\nexport function transformToStructure(elements, type) {\\n  return Object.values(\\n    Object.entries(elements)\\n      .filter(([kulcs, ertek]) => {\\n        const [dataType] = kulcs.split(\\\"-\\\");\\n        return dataType === type;\\n      })\\n      .reduce((acc, [kulcs, ertek]) => {\\n        const [_, name, index] = kulcs.split(\\\"-\\\");\\n        return {\\n          ...acc,\\n          [index]: acc[index]\\n            ? {\\n                ...acc[index],\\n                [name]: ertek.value,\\n              }\\n            : { [name]: ertek.value },\\n        };\\n      }, {})\\n  );\\n}\\n\\n<form\\n  onSubmit={async (e) => {\\n    e.preventDefault();\\n\\n    const formData = new FormData();\\n    formData.append(\\\"name\\\", e.target.elements.name.value);\\n    formData.append(\\\"ingredients\\\", JSON.stringify(transformToStructure(e.target.elements, \\\"ingredient\\\")));\\n    formData.append(\\\"steps\\\", JSON.stringify(transformToStructure(e.target.elements, \\\"step\\\")));\\n    formData.append(\\\"image\\\", e.target.elements[\\\"img-url\\\"].files[0]);\\n\\n    setPending(true);\\n    await fetch(`${process.env.REACT_APP_BACKEND_URL}/recipes`, { method: \\\"POST\\\", body: formData });\\n    setPending(false);\\n    history.push(\\\"/receptek\\\");\\n  }}\\n>\\n  ...\\n</form>\\n\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"cddb46e4-4c42-5278-be9e-cd1a2636d829","slug":"","title":""}}}