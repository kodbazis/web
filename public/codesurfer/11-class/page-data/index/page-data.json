{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","webpackCompilationHash":"47d2e26b69d79ca8c08c","result":{"data":{"deck":{"id":"cddb46e4-4c42-5278-be9e-cd1a2636d829","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Komponens(props) {\\n\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\nfunction Komponens(props) {\\n  const [products, setProducts] = React.useState([]);\\n\\n  React.useEffect(() => {\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n  }, []);\\n}\\n\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\nfunction Komponens(props) {\\n  const [products, setProducts] = React.useState([]);\\n\\n  React.useEffect(() => {\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n  }, []);\\n\\n  return (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  )\\n}\\n\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200E\\u200E\\nfunction Komponens(props) {\\n  const [products, setProducts] = React.useState([]);\\n  const [isPending, setPending] = React.useState(false);\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  return (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  )\\n}\\n\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200E\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200E\\u200E\\nfunction Komponens(props) {\\n  const [products, setProducts] = React.useState([]);\\n  const [isPending, setPending] = React.useState(false);\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  return !isPending ? (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  ) : (\\n    <div class=\\\"spinner-border\\\"></div>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200E\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200E\\u200E\\u200E\\u200E\\u200E\\u200E\\nfunction Komponens(props) {\\n  const [products, setProducts] = React.useState([]);\\n  const [isPending, setPending] = React.useState(false);\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  return !isPending ? (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  ) : (\\n    <div class=\\\"spinner-border\\\"></div>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200E\\u200E\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\u200E\\u200E\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Komponens(props) {\\n  const [products, setProducts] = React.useState([]);\\n  const [isPending, setPending] = React.useState(false);\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  return !isPending ? (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  ) : (\\n    <div class=\\\"spinner-border\\\"></div>\\n  );\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"1:38\",\n    \"1:38\": true\n  }), \"class Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    if (elozoState.isPending !== this.state.isPending) {\\n      document.title = this.state.isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n    }\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Komponens (props) {\\n  const [products, setProducts] = React.useState([]);\\n  const [isPending, setPending] = React.useState(false);\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  return !isPending ? (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  ) : (\\n    <div class=\\\"spinner-border\\\"></div>\\n  );\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"class Komponens extends React.Component {\\n  const [products, setProducts] = React.useState([]);\\n  const [isPending, setPending] = React.useState(false);\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  return !isPending ? (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  ) : (\\n    <div class=\\\"spinner-border\\\"></div>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"class Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  return !isPending ? (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  ) : (\\n    <div class=\\\"spinner-border\\\"></div>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  render() {\\n    return !isPending ? (\\n      <div>\\n        {products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"  \\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"  \\u200E\\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\u200E \\u200E \\u200E \\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\u200E \\u200E \\u200E\\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    if (elozoState.isPending !== this.state.isPending) {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n    }\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\u200E \\u200E \\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    if (elozoState.isPending !== this.state.isPending) {\\n      document.title = this.state.isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n    }\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1:40\",\n    \"1:40\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\u200E \\u200E \\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    if (elozoState.isPending !== this.state.isPending) {\\n      document.title = this.state.isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n    }\\n    if (elozoProps.ertek !== this.props.ertek) {\\n      // ...\\n    }\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\u200E \\u200E \\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    if (elozoState.isPending !== this.state.isPending) {\\n      document.title = this.state.isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n    }\\n    if (elozoProps.ertek !== this.props.ertek) {\\n      // ...\\n    }\\n    if (elozoState.ertek2 !== this.state.ertek2) {\\n      // ...\\n    }\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n\\n  React.useEffect(() => {\\n    // ...\\n  }, [props.ertek]);\\n\\n\\n  React.useEffect(() => {\\n    // ...\\n  }, [ertek2]);\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"1:14\",\n    \"1:14\": true\n  }), \"  const [isPending, setPending] = React.useState(false);\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n\\n  React.useEffect(() => {\\n    // ...\\n  }, [props.ertek]);\\n\\n  const [ertek2, setErtek2] = React.useState(100);\\n  React.useEffect(() => {\\n    // ...\\n  }, [ertek2]);\\n\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n\\n      document.title = \\\"\\xDCdv az oldalon...\\\";\\n\\n      // Tov\\xE1bbi mountol\\xE1skor futtatand\\xF3 k\\xF3d...\\n  }\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"1:22\",\n    \"1:22\": true\n  }), \"\\n  React.useEffect(() => {\\n     setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n\\n  React.useEffect(() => {\\n    document.title = \\\"\\xDCdv az oldalon...\\\";\\n  }, []);\\n\\n\\n  React.useEffect(() => {\\n    // Tov\\xE1bbi mountol\\xE1skor futtatand\\xF3 k\\xF3d...\\n  }, []);\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Komponens(props) {\\n  const [products, setProducts] = React.useState([]);\\n  const [isPending, setPending] = React.useState(false);\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  return !isPending ? (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  ) : (\\n    <div class=\\\"spinner-border\\\"></div>\\n  );\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function Komponens(props) {\\n  const [products, setProducts] = React.useState([]);\\n  const [isPending, setPending] = React.useState(false);\\n\\n  React.useEffect(() => {\\n    setPending(true);\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        setProducts(termekek);\\n      })\\n      .finally(() => {\\n        setPending(false);\\n      });\\n  }, []);\\n\\n  React.useEffect(() => {\\n    document.title = isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n  }, [isPending]);\\n\\n  React.useEffect(() => {\\n\\n    return () => {\\n      // Cleanup function (komponens unmountol\\xF3d\\xE1skor fut)\\n    }\\n  }, []);\\n\\n  return !isPending ? (\\n    <div>\\n      {products.map((product) => (\\n        <div key={product.id}>{product.name}</div>\\n      ))}\\n    </div>\\n  ) : (\\n    <div class=\\\"spinner-border\\\"></div>\\n  );\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"1:40\",\n    \"1:40\": true\n  }), \" \\u200E \\u200E \\u200E\\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    if (elozoState.isPending !== this.state.isPending) {\\n      document.title = this.state.isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n    }\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \" \\u200E \\u200E \\u200E\\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    if (elozoState.isPending !== this.state.isPending) {\\n      document.title = this.state.isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    // Cleanup function (komponens unmountol\\xF3d\\xE1skor fut)\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"1:44\",\n    \"1:44\": true\n  }), \" \\u200E \\u200E  \\u200E\\u200E\\u200E\\u200E\\nclass Komponens extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      products: [],\\n      isPending: false,\\n    };\\n  }\\n\\n  componentDidMount() {\\n    this.setState({ isPending: true });\\n    fetch(\\\"/products\\\")\\n      .then((res) => res.json())\\n      .then((termekek) => {\\n        this.setState({ products: termekek });\\n      })\\n      .finally(() => {\\n        this.setState({ isPending: false });\\n      });\\n  }\\n\\n  componentDidUpdate(elozoProps, elozoState) {\\n    if (elozoState.isPending !== this.state.isPending) {\\n      document.title = this.state.isPending ? \\\"Folyamatban...\\\" : \\\"Term\\xE9kek\\\";\\n    }\\n  }\\n\\n  componentWillUnmount() {\\n    // Cleanup function (komponens unmountol\\xF3d\\xE1skor fut)\\n  }\\n\\n  render() {\\n    return !this.state.isPending ? (\\n      <div>\\n        {this.state.products.map((product) => (\\n          <div key={product.id}>{product.name}</div>\\n        ))}\\n      </div>\\n    ) : (\\n      <div class=\\\"spinner-border\\\"></div>\\n    );\\n  }\\n}\\n \\u200E \\u200E \\u200E \\u200E\\u200E\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"cddb46e4-4c42-5278-be9e-cd1a2636d829","slug":"","title":""}}}