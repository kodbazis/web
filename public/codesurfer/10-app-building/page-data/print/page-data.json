{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","webpackCompilationHash":"47d2e26b69d79ca8c08c","result":{"data":{"deck":{"id":"cddb46e4-4c42-5278-be9e-cd1a2636d829","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function App() {\\n\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function App() {\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n\\n      </div>\\n    </div>\\n  );\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\nfunction App() {\\n\\n  React.useEffect(() => {\\n\\n  }, []);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n\\n      </div>\\n    </div>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction App() {\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/comments\\\")\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        \\n      });\\n  }, []);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n\\n      </div>\\n    </div>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200F\\u200F\\u200E \\u200E\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\nfunction App() {\\n  const [items, setItems] = React.useState([]);\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/comments\\\")\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        setItems(tartalom)\\n      });\\n  }, []);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n\\n      </div>\\n    </div>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction App() {\\n  const [items, setItems] = React.useState([]);\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/comments\\\")\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        setItems(tartalom)\\n      });\\n  }, []);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n        <ListaKomponens elemek={items} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nfunction ListaKomponens({ elemek }) {\\n\\n}\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function ListaKomponens({ elemek }) {\\n  \\n  return <ul>{elementekTombje}</ul>;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function ListaKomponens({ elemek }) {\\n  let elementekTombje = [];\\n\\n  for (let elem of elemek) {\\n    elementekTombje.push(\\n      <li className=\\\"list-group-item\\\">\\n        {elem.body}\\n      </li>\\n    );\\n  }\\n\\n  return <ul>{elementekTombje}</ul>;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function ListaKomponens({ elemek }) {\\n  let elementekTombje = [];\\n\\n  for (let elem of elemek) {\\n    elementekTombje.push(\\n      <li className=\\\"list-group-item\\\">\\n        {elem.body}\\n      </li>\\n    );\\n  }\\n\\n  return <ul>{elementekTombje}</ul>;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function ListaKomponens({ elemek }) {\\n  return (\\n    <ul>\\n      {elemek.map((elem) => (\\n        <li className=\\\"list-group-item\\\">\\n          {elem.body}\\n        </li>\\n      ))}\\n    </ul>\\n  );\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function ListaKomponens({ elemek }) {\\n  return (\\n    <ul>\\n      {elemek.map((elem) => (\\n        <li key={elem.id} className=\\\"list-group-item\\\">\\n          {elem.body}\\n        </li>\\n      ))}\\n    </ul>\\n  );\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"1:9\",\n    \"1:9\": true\n  }), \"const ListaKomponens = ({ elemek }) => (\\n    <ul>\\n      {elemek.map((elem) => (\\n        <li key={elem.id} className=\\\"list-group-item\\\">\\n          {elem.body}\\n        </li>\\n      ))}\\n    </ul>\\n);\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"function App() {\\n  const [items, setItems] = React.useState([]);\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/comments\\\")\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        setItems(tartalom)\\n      });\\n  }, []);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n        <ListaKomponens elemek={items} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nconst ListaKomponens = ({ elemek }) => (\\n    <ul>\\n      {elemek.map((elem) => (\\n        <li key={elem.id} className=\\\"list-group-item\\\">\\n          {elem.body}\\n        </li>\\n      ))}\\n    </ul>\\n);\\n\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\nfunction App() {\\n  const [items, setItems] = React.useState([]);\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/comments\\\")\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        setItems(tartalom)\\n      });\\n  }, []);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n        <ListaKomponens elemek={items} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nconst ListaKomponens = ({ elemek }) => (\\n    <ul>\\n      {elemek.map((elem) => (\\n        <li key={elem.id} className=\\\"list-group-item\\\">\\n          {elem.body}\\n        </li>\\n      ))}\\n    </ul>\\n);\\n\\nReactDOM.render(<App />, document.getElementById(\\\"app-container\\\"));\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\"))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\nfunction App() {\\n  const [items, setItems] = React.useState([]);\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/comments\\\")\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        setItems(tartalom)\\n      });\\n  }, []);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n        <ListaKomponens elemek={items} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nconst ListaKomponens = ({ elemek }) => (\\n  <ul>\\n    {elemek.map((elem) => (\\n      <li key={elem.id} className=\\\"list-group-item\\\">\\n        {elem.body}\\n      </li>\\n    ))}\\n  </ul>\\n);\\n\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction App() {\\n  const [items, setItems] = React.useState([]);\\n  const [tipus, setTipus] = React.useState(\\\"comments\\\");\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/\\\" + tipus)\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        setItems(tartalom)\\n      });\\n  }, [tipus]);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n        <ListaKomponens elemek={items} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nconst ListaKomponens = ({ elemek }) => (\\n  <ul>\\n    {elemek.map((elem) => (\\n      <li key={elem.id} className=\\\"list-group-item\\\">\\n        {elem.body}\\n      </li>\\n    ))}\\n  </ul>\\n);\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction App() {\\n  const [items, setItems] = React.useState([]);\\n  const [tipus, setTipus] = React.useState(\\\"comments\\\");\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/\\\" + tipus)\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        setItems(tartalom)\\n      });\\n  }, [tipus]);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n        <FormKomponens setTipus={setTipus} />\\n        <ListaKomponens elemek={items} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nfunction FormKomponens({ setTipus }) {\\n  return (\\n\\n  );\\n}\\n\\nconst ListaKomponens = ({ elemek }) => (\\n  <ul>\\n    {elemek.map((elem) => (\\n      <li key={elem.id} className=\\\"list-group-item\\\">\\n        {elem.body}\\n      </li>\\n    ))}\\n  </ul>\\n);\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\nfunction FormKomponens({ setTipus }) {\\n  return (\\n    <form\\n      className=\\\"w-100\\\"\\n    >\\n\\n    </form>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction FormKomponens({ setTipus }) {\\n  return (\\n    <form\\n      className=\\\"w-100\\\"\\n    >\\n      <select\\n        name=\\\"contentType\\\"\\n        className=\\\"form-control mb-2\\\"\\n      >\\n\\n      </select>\\n    </form>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction FormKomponens({ setTipus }) {\\n  return (\\n    <form\\n      className=\\\"w-100\\\"\\n    >\\n      <select\\n        name=\\\"contentType\\\"\\n        className=\\\"form-control mb-2\\\"\\n      >\\n        <option value=\\\"comments\\\">Kommentek</option>\\n        <option value=\\\"posts\\\">Posztok</option>\\n      </select>\\n    </form>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction FormKomponens({ setTipus }) {\\n  return (\\n    <form\\n      className=\\\"w-100\\\"\\n    >\\n      <select\\n        name=\\\"contentType\\\"\\n        className=\\\"form-control mb-2\\\"\\n      >\\n        <option value=\\\"comments\\\">Kommentek</option>\\n        <option value=\\\"posts\\\">Posztok</option>\\n      </select>\\n      <button\\n        className=\\\"btn btn-primary mb-2\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Kiv\\xE1laszt\\n      </button>\\n    </form>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction FormKomponens({ setTipus }) {\\n  return (\\n    <form\\n      className=\\\"w-100\\\"\\n      onSubmit={(event) => {\\n        event.preventDefault();\\n      }}\\n    >\\n      <select\\n        name=\\\"contentType\\\"\\n        className=\\\"form-control mb-2\\\"\\n      >\\n        <option value=\\\"comments\\\">Kommentek</option>\\n        <option value=\\\"posts\\\">Posztok</option>\\n      </select>\\n      <button\\n        className=\\\"btn btn-primary mb-2\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Kiv\\xE1laszt\\n      </button>\\n    </form>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction FormKomponens({ setTipus }) {\\n  return (\\n    <form\\n      className=\\\"w-100\\\"\\n      onSubmit={(event) => {\\n        event.preventDefault();\\n        setTipus(event.target.elements.contentType.value);\\n      }}\\n    >\\n      <select\\n        name=\\\"contentType\\\"\\n        className=\\\"form-control mb-2\\\"\\n      >\\n        <option value=\\\"comments\\\">Kommentek</option>\\n        <option value=\\\"posts\\\">Posztok</option>\\n      </select>\\n      <button\\n        className=\\\"btn btn-primary mb-2\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Kiv\\xE1laszt\\n      </button>\\n    </form>\\n  );\\n}\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"const FormKomponens = ({ setTipus }) => (\\n    <form\\n      className=\\\"w-100\\\"\\n      onSubmit={(event) => {\\n        event.preventDefault();\\n        setTipus(event.target.elements.contentType.value);\\n      }}\\n    >\\n      <select\\n        name=\\\"contentType\\\"\\n        className=\\\"form-control mb-2\\\"\\n      >\\n        <option value=\\\"comments\\\">Kommentek</option>\\n        <option value=\\\"posts\\\">Posztok</option>\\n      </select>\\n      <button\\n        className=\\\"btn btn-primary mb-2\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Kiv\\xE1laszt\\n      </button>\\n    </form>\\n);\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E  \\u200E\\u200E\\u200F\\u200F\\u200E\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"\\n \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\nfunction App() {\\n  const [items, setItems] = React.useState([]);\\n  const [tipus, setTipus] = React.useState(\\\"comments\\\");\\n\\n  React.useEffect(() => {\\n    fetch(\\\"https://jsonplaceholder.typicode.com/\\\" + tipus)\\n      .then((res) => (res.ok ? res.json() : []))\\n      .then((tartalom) => {\\n        setItems(tartalom)\\n      });\\n  }, [tipus]);\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row m-5 border p-5\\\">\\n        <FormKomponens setTipus={setTipus} />\\n        <ListaKomponens elemek={items} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nconst FormKomponens = ({ setTipus }) => (\\n    <form\\n      className=\\\"w-100\\\"\\n      onSubmit={(event) => {\\n        event.preventDefault();\\n        setTipus(event.target.elements.contentType.value);\\n      }}\\n    >\\n      <select\\n        name=\\\"contentType\\\"\\n        className=\\\"form-control mb-2\\\"\\n      >\\n        <option value=\\\"comments\\\">Kommentek</option>\\n        <option value=\\\"posts\\\">Posztok</option>\\n      </select>\\n      <button\\n        className=\\\"btn btn-primary mb-2\\\"\\n        type=\\\"submit\\\"\\n      >\\n        Kiv\\xE1laszt\\n      </button>\\n    </form>\\n);\\n\\nconst ListaKomponens = ({ elemek }) => (\\n  <ul>\\n    {elemek.map((elem) => (\\n      <li key={elem.id} className=\\\"list-group-item\\\">\\n        {elem.body}\\n      </li>\\n    ))}\\n  </ul>\\n);\\n\\nReactDOM.render(React.createElement(App), document.getElementById(\\\"app-container\\\"));\\n\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E \\u200E\\u200F\\u200F\\u200E  \\u200E\\u200E\\u200F\\u200F\\u200E\\u200E\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1:59\",\n    \"1:59\": true\n  }), \"\"))), mdx(\"hr\", null));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"cddb46e4-4c42-5278-be9e-cd1a2636d829","slug":"","title":""}}}